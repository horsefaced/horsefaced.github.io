<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何在.NET Core上建立Agora的AccessToken服务</title>
      <link href="/2020/09/23/%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/"/>
      <url>/2020/09/23/%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="如何在-NET-Core上建立Agora的AccessToken服务"><a href="#如何在-NET-Core上建立Agora的AccessToken服务" class="headerlink" title="如何在.NET Core上建立Agora的AccessToken服务"></a>如何在.NET Core上建立Agora的AccessToken服务</h1><p>随着大量公司将办公会议、产品发布等改为网上进行后， 视频通信的安全性越来越成为受关注的重点。声网平台在 2.1.0 版本之后，通过使用 AccessToken 认证统一了视频通话RTC、录制、消息通讯RTM等各 SDK 的安全认证形式，相较于原先的 DynmicKey 更加方便于用户使用。</p><p>.NET Core 是微软的跨平台开发框架，可运行在 Windows、Linux、macOS 等操作系统之上，通过命令行工具就可以方便的创建、编译、运行，并可搭配 <a href="https://docs.microsoft.com/zh-cn/dotnet/core/docker/introduction">Docker 容器</a>使用，方便嵌入微服务架构中。</p><p>本文将基于 .NET Core 3.1 版本说明如何建立一个 Agora RTC Token 服务，同样这个服务也可以用于录制和 RTM SDK中。</p><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><ul><li>本文默认读者了解基本的 C# 编程知识，如果有需要可以访问<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/">C#文档</a> 进行了解。</li><li>本文需要 ASP.NET Core 及相关的 WebAPI 知识，如果有需要可以访问<a href="https://docs.microsoft.com/zh-cn/aspnet/core/?view=aspnetcore-3.1">ASP.NET 文档</a>进行了解。</li><li>本文会有一点点 Git 相关的使用，但不是必要的。</li></ul><h2 id="本文所需工具"><a href="#本文所需工具" class="headerlink" title="本文所需工具"></a>本文所需工具</h2><ul><li><a href="https://dotnet.microsoft.com/download">.NET Core SDK</a> - 包括 .NET Core 运行时、开发包及命令行工具。</li><li><a href="https://code.visualstudio.com/">Visual Studio Code</a> - 微软推出的跨平台开发工具，你也可以使用自己喜欢或习惯的开发工具。</li><li><a href="https://code.visualstudio.com/docs/languages/dotnet">.NET Core开发环境配置</a> - 如果你刚开始使用 Visual Studio Code，推荐阅读这个链接中的安装配置。</li><li><a href="https://git-scm.com/downloads">Git</a> - 本文会使用到 Git 但不是必要条件，在相应章节会进行说明。</li></ul><h2 id="项目创建"><a href="#项目创建" class="headerlink" title="项目创建"></a>项目创建</h2><ol><li>打开终端，进入你平时开发目录</li><li>运行以下命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dotnet new webapi -o AgoraTokenServer</span><br><span class="line">code -r AgoraTokenServer</span><br></pre></td></tr></table></figure><ol start="3"><li><p>如果你正确的安装了 Visual Studio Code 的话，这时系统应该会打开 Visual Studio Code 程序并将 AgoraTokenServer 这个项目显示在左侧，如下图所示：</p><p><img src="image-20200913165213034.png"></p><p>为了方便起见，以下 Visual Studio Code 将简称为 vscode。此时整个项目的目录结构应该如下图所示：</p><p><img src="2020-09-23-%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/image-20200913165358515.png" alt="image-20200913165358515"></p></li></ol><p>我们将 WeatherForecast.cs 与 Controllers/WeatherForecastController.cs 删除，稍后我们将建立起自己的服务。</p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><h3 id="引入工具代码"><a href="#引入工具代码" class="headerlink" title="引入工具代码"></a>引入工具代码</h3><p>Agora 在其<a href="https://github.com/AgoraIO/Tools">AgoraIO in GitHub</a>中提供了 AccessToken 的 C# 实现，我们可以直接使用它。</p><ol><li>进入<a href="https://github.com/AgoraIO/Tools">AgoraIO in GitHub</a>，点击页面上那个绿色的Code按钮</li></ol><p><img src="2020-09-23-%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/image-20200913170057183.png" alt="image-20200913170057183"></p><ol start="2"><li>如果你会 Git 那么可以直接在其他目录中，<strong>注意不要直接在上一章节建立的 AgoraTokenServer 项目目录中</strong>，把项目克隆下来。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/AgoraIO/Tools.git</span><br></pre></td></tr></table></figure><p>​            如果你不会 Git ，可以直接点击 Download ZIP 将其下载下来并解压缩。</p><p><img src="2020-09-23-%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/image-20200913172902977.png" alt="image-20200913172902977"></p><ol start="3"><li><p>进入刚刚 Git 克隆或者下载解压缩后的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Tools/DynamicKey/AgoraDynamicKey/csharp/src/AgoraIO</span><br></pre></td></tr></table></figure><p>将其中的 Common、Extensions、Media、Utils 四个目录直接拷贝至你创建的 AgoraTokenServer 目录下，之后你的 AgoraTokenServer 目录结构应该是如下图这样子的：</p><p><img src="2020-09-23-%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/image-20200913174340000.png" alt="image-20200913174340000"></p></li></ol><h3 id="解决依赖"><a href="#解决依赖" class="headerlink" title="解决依赖"></a>解决依赖</h3><p>你会发现上图中 Media/AccessToken.cs 是红色的，那是因为这个项目依赖于<a href="https://www.nuget.org/packages/Crc32.NET/">Crc32.NET</a>这个包，如果你正确的安装了 .NET Core 的运行时和命令行工具的话 我们直接使用命令行将其安装就可以了。</p><p>进入 AgoraTokenServer 项目的根目录下，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package Crc32.NET</span><br></pre></td></tr></table></figure><p>这样子我们唯一一个外部依赖包就解决了。</p><h3 id="设置-AppID-与-AppCertificate"><a href="#设置-AppID-与-AppCertificate" class="headerlink" title="设置 AppID 与 AppCertificate"></a>设置 AppID 与 AppCertificate</h3><ol><li><p>在通常环境中 AppCertificate 应当保存在安全性较高的服务端，不宜通过客户端请求进行传输，在 .NET Core 中这种设置通常可以保存在 <strong>appsetting.json</strong> 中。<em>下面 appsetting.json 代码中的 AppID 和 AppCertificate 为示例，请在使用中替换为自己使用的对应 AppID 和 AppCertificate。</em></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;AppSettings&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;AppID&quot;</span>: <span class="string">&quot;970CA35de60c44645bbae8a215061b33&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;AppCertificate&quot;</span>: <span class="string">&quot;5CFd2fd1755d40ecb72977518be15d3b&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;LogLevel&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;Default&quot;</span>: <span class="string">&quot;Information&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;Microsoft&quot;</span>: <span class="string">&quot;Warning&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;Microsoft.Hosting.Lifetime&quot;</span>: <span class="string">&quot;Information&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;AllowedHosts&quot;</span>: <span class="string">&quot;*&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>建立配置类</p><p>在 Utils 目录下创建一个名为 AppSettings.cs 的文件，文件内容为：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">AgoraTokenServer.Utils</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AppSettings</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> AppID &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> AppCertificate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>注入配置类</p><p>ASP.NET Core 使用依赖注入来解决整个程序的依赖问题，通过这个机制我们可以很方便的把上面定义的配置注入进去。依赖注入需要在 Startup.cs 文件中添加自定义的配置类，添加后 Startup.cs 文件内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> AgoraTokenServer.Utils;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Builder;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Hosting;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Configuration;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.DependencyInjection;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Hosting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AgoraTokenServer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Startup</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Startup</span>(<span class="params">IConfiguration configuration</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Configuration = configuration;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> IConfiguration Configuration &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// This method gets called by the runtime. Use this method to add services to the container.</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            services.AddCors(); <span class="comment">//添加跨域请求</span></span><br><span class="line">            services.AddControllers();</span><br><span class="line">            services.Configure&lt;AppSettings&gt;(Configuration.GetSection(<span class="string">&quot;AppSettings&quot;</span>)); <span class="comment">//添加程序配置</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">            &#123;</span><br><span class="line">                app.UseDeveloperExceptionPage();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            app.UseHttpsRedirection();</span><br><span class="line"></span><br><span class="line">            app.UseRouting();</span><br><span class="line"></span><br><span class="line">            app.UseCors(x =&gt; x</span><br><span class="line">                    .AllowAnyOrigin()</span><br><span class="line">                    .AllowAnyMethod()</span><br><span class="line">                    .AllowAnyHeader());</span><br><span class="line"></span><br><span class="line">            app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">            app.UseEndpoints(endpoints =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                endpoints.MapControllers();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="创建-Model"><a href="#创建-Model" class="headerlink" title="创建 Model"></a>创建 Model</h3><p>我们先定义两个对象来描述接受的内容和返回的结果。首先建立一个名为 Models 的目录，再在目录下创建两个文件。</p><ol><li><p>请求对象文件</p><p><strong>Path: /Models/AuthenticateRequest.cs</strong></p><p> 在 Models 目录下创建 AuthenticateRequest.cs 文件，文件内容为：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.ComponentModel.DataAnnotations;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AgoraTokenServer.Models</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AuthenticateRequest</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">Required</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> channel &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        [<span class="meta">Required</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">dynamic</span> uid &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">uint</span> expiredTs &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> role &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为 Agora 的用户标识有两种类型，一种是 uint 型，一种是 string 型的，所以这里直接使用 dynamic 类型来同时兼容两种类型。</p></li><li><p>回应对象</p><p><strong>Path: /Models/AuthenticateResponse.cs</strong></p><p>在 Models 目录下创建 AuthenticateResponse.cs 文件，文件内容为：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">AgoraTokenServer.Models</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AuthenticateResponse</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> channel &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">dynamic</span> uid &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> token &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>现在项目的结构如下图：</p><p><img src="2020-09-23-%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/image-20200913194237623.png" alt="image-20200913194237623"></p></li></ol><h3 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a>创建服务</h3><ol><li><p>现在我们创建一个控制器来提供服务，首先在 AgoraTokenServer 项目的 Controllers 目录下建立一个名为 AccessTokenController.cs 的文件。</p><p><strong>Path: /Controllers/AccessTokenController.cs</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> AgoraTokenServer.Models;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AgoraTokenServer.Contollers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    [<span class="meta">Route(<span class="meta-string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AccessTokenController</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加程序配置</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> AgoraTokenServer.Utils;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Options;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AgoraTokenServer.Contollers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    [<span class="meta">Route(<span class="meta-string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AccessTokenController</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> AppSettings appSettings;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AccessTokenController</span>(<span class="params">IOptions&lt;AppSettings&gt; appSettings</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.appSettings = appSettings.Value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加请求处理部分</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Text.Json;</span><br><span class="line"><span class="keyword">using</span> AgoraIO.Media;</span><br><span class="line"><span class="keyword">using</span> AgoraTokenServer.Models;</span><br><span class="line"><span class="keyword">using</span> AgoraTokenServer.Utils;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Options;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AgoraTokenServer.Contollers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    [<span class="meta">Route(<span class="meta-string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AccessTokenController</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> AppSettings appSettings;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AccessTokenController</span>(<span class="params">IOptions&lt;AppSettings&gt; appSettings</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.appSettings = appSettings.Value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> ActionResult&lt;AuthenticateResponse&gt; <span class="title">index</span>(<span class="params">AuthenticateRequest request</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(appSettings.AppID) || <span class="keyword">string</span>.IsNullOrEmpty(appSettings.AppCertificate))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> StatusCodeResult((<span class="keyword">int</span>)HttpStatusCode.PreconditionFailed);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> uid = request.uid.ValueKind == JsonValueKind.Number ? request.uid.GetUInt64().ToString() : request.uid.GetString();</span><br><span class="line">            <span class="keyword">var</span> tokenBuilder = <span class="keyword">new</span> AccessToken(appSettings.AppID, appSettings.AppCertificate, request.channel, uid);</span><br><span class="line">            tokenBuilder.addPrivilege(Privileges.kJoinChannel, request.expiredTs);</span><br><span class="line">            tokenBuilder.addPrivilege(Privileges.kPublishAudioStream, request.expiredTs);</span><br><span class="line">            tokenBuilder.addPrivilege(Privileges.kPublishVideoStream, request.expiredTs);</span><br><span class="line">            tokenBuilder.addPrivilege(Privileges.kPublishDataStream, request.expiredTs);</span><br><span class="line">            tokenBuilder.addPrivilege(Privileges.kRtmLogin, request.expiredTs);</span><br><span class="line">            <span class="keyword">return</span> Ok(<span class="keyword">new</span> AuthenticateResponse</span><br><span class="line">            &#123;</span><br><span class="line">                channel = request.channel,</span><br><span class="line">                uid = request.uid,</span><br><span class="line">                token = tokenBuilder.build()</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在请求处理中，直接调用了从 AgoraIO 上下载的代码，并且在没有配置 AppID 和 AppCertificate 情况下会回报 412 错误。</p><p>同时，这个示例代码中直接将[kJoinChannel, kPublishAudioStream, kPublishVideoStream, kPubishDataStream, kRtmLogin] 的权限一次性给出来，你可以根据直接的需要，在 AuthenticateRequest 中添加权限申请的字段， 实现权限的申请功能。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult&lt;AuthenticateResponse&gt; <span class="title">index</span>(<span class="params">AuthenticateRequest request</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(appSettings.AppID) || <span class="keyword">string</span>.IsNullOrEmpty(appSettings.AppCertificate))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> StatusCodeResult((<span class="keyword">int</span>)HttpStatusCode.PreconditionFailed);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> uid = request.uid.ValueKind == JsonValueKind.Number ? request.uid.GetUInt64().ToString() : request.uid.GetString();</span><br><span class="line">  <span class="keyword">var</span> tokenBuilder = <span class="keyword">new</span> AccessToken(appSettings.AppID, appSettings.AppCertificate, request.channel, uid);</span><br><span class="line">  tokenBuilder.addPrivilege(Privileges.kJoinChannel, request.expiredTs);</span><br><span class="line">  tokenBuilder.addPrivilege(Privileges.kPublishAudioStream, request.expiredTs);</span><br><span class="line">  tokenBuilder.addPrivilege(Privileges.kPublishVideoStream, request.expiredTs);</span><br><span class="line">  tokenBuilder.addPrivilege(Privileges.kPublishDataStream, request.expiredTs);</span><br><span class="line">  tokenBuilder.addPrivilege(Privileges.kRtmLogin, request.expiredTs);</span><br><span class="line">  <span class="keyword">return</span> Ok(<span class="keyword">new</span> AuthenticateResponse</span><br><span class="line">            &#123;</span><br><span class="line">              channel = request.channel,</span><br><span class="line">              uid = request.uid,</span><br><span class="line">              token = tokenBuilder.build()</span><br><span class="line">            &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="编译并运行"><a href="#编译并运行" class="headerlink" title="编译并运行"></a>编译并运行</h3><p>.NET Core 的编译和运行只需要通过命令行既可以解决，在 AgoraTokenServer 目录下，直接在命令行中运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet build</span><br></pre></td></tr></table></figure><p>就可以编译整个工程了。</p><p>运行也很直接，直接在命令行中运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet run</span><br></pre></td></tr></table></figure><p>就可以在 <a href="https://localhost:5001/">https://localhost:5001</a> 和 <a href="http://localhost:5000/">http://localhost:5000</a> 上运行服务了。</p><p>如果你想改缺省的运行端口，推荐直接修改 <strong>Path: /Properties/launchSettings.json</strong> 文件中的 AgoraTokenServer 这一节的 applicationUrl 参数，其内容如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&quot;AgoraTokenServer&quot;: &#123;</span><br><span class="line">  &quot;commandName&quot;: &quot;Project&quot;,</span><br><span class="line">  &quot;launchBrowser&quot;: true,</span><br><span class="line">  &quot;launchUrl&quot;: &quot;weatherforecast&quot;,</span><br><span class="line">  &quot;applicationUrl&quot;: &quot;https://localhost:5001;http://localhost:5000&quot;,</span><br><span class="line">  &quot;environmentVariables&quot;: &#123;</span><br><span class="line">  &quot;ASPNETCORE_ENVIRONMENT&quot;: &quot;Development&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为修改过的 launchSettings.json 本身也会做为一个配置文件发布在最终运行目录中，这样子就不用吧端口写死在源代码中，或者在 Program.cs 中额外添加代码了。</p><h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><p>在本文中，使用<a href="www.postman.com">Postman</a>对服务进行测试，大家可以使用自己习惯的工具。在具体的请求中，因为 expiredTS 和 role 在程序中有缺省值，所以请求中就可以忽略，并且在现阶段，role 只有一个值，所以推荐可以暂时忽略这个。而 expiredTS 的具体用法，可以参考Agora官方网站的<a href="https://docs.agora.io/cn/Video/token_server_cpp?platform=CPP">生成Token</a>一文中的说明。</p><p><img src="2020-09-23-%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/image-20200913214230336.png" alt="image-20200913214230336"></p><p>具体的 Postman 请求结果如下图所示。</p><p><img src="2020-09-23-%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/image-20200913213711509.png" alt="image-20200913213711509"></p><p>如果你在使用 Postman 发送请求的时候发生了下图的错误：</p><p><img src="2020-09-23-%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/image-20200913214838643.png" alt="image-20200913214838643"></p><p>是因为你现在访问的 https 链接使用的证书是无效的，实际使用中你需要部署真实的证书，测试阶段你可以通过下图的 Settings 按钮将第一个 Enable SSL certificate verification 关闭</p><p><img src="2020-09-23-%E5%A6%82%E4%BD%95%E5%9C%A8-NET-Core%E4%B8%8A%E5%BB%BA%E7%AB%8BAgora%E7%9A%84AccessToken%E6%9C%8D%E5%8A%A1/image-20200913215607065.png" alt="image-20200913215607065"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>到现在为止，基于 .NET Core 的 Agora Token 服务已经开发完成。在实际使用中，还需要添加安全机制，这个可以根据你自己的具体架构情况进行完善。</p><p>.NET Core 的 docker 化可以参考微软的 <a href="https://docs.microsoft.com/zh-cn/dotnet/core/docker/introduction">Docker 容器</a> 这编文章。</p><p>本文的所有代码都可以在 <a href="https://github.com/horsefaced/AgoraTokenServer-For-NET-Core">GitHub</a> 上下载。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2020年国庆装备表</title>
      <link href="/2020/09/06/2020%E5%B9%B4%E5%9B%BD%E5%BA%86%E8%A3%85%E5%A4%87%E8%A1%A8/"/>
      <url>/2020/09/06/2020%E5%B9%B4%E5%9B%BD%E5%BA%86%E8%A3%85%E5%A4%87%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>类别</th><th>名称</th><th>数量</th><th>重量</th><th>Check</th></tr></thead><tbody><tr><td>三大件</td><td>田野睡袋</td><td>1</td><td>872</td><td></td></tr><tr><td></td><td>酱铺的泡沫垫</td><td>1</td><td>230</td><td></td></tr><tr><td></td><td>AMK Bivy 地布</td><td>1</td><td>101</td><td></td></tr><tr><td></td><td>酱铺二人金字塔</td><td>1</td><td>581</td><td></td></tr><tr><td></td><td>酱铺背架(简易版)</td><td>1</td><td>1010</td><td></td></tr><tr><td></td><td>钛空心地丁</td><td>15</td><td>137</td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td>炊具</td><td>小姜手作酒精炉</td><td>1</td><td>15</td><td></td></tr><tr><td></td><td>bushbuddy柴火炉</td><td>1</td><td>181</td><td></td></tr><tr><td></td><td>铝锅</td><td>1</td><td>96</td><td></td></tr><tr><td></td><td>Flod-A-Cup 折叠水杯</td><td>1</td><td>50</td><td></td></tr><tr><td></td><td>3升康迪净水水袋</td><td>1</td><td>102</td><td></td></tr><tr><td></td><td>膳魔师FEK800</td><td>1</td><td>194</td><td></td></tr><tr><td></td><td>鸭嘴兽1升水袋（奶头盖子）</td><td>1</td><td>35</td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td>衣服</td><td>smartwood袜子</td><td>1</td><td>68</td><td></td></tr><tr><td></td><td>速干长裤</td><td>1</td><td>320</td><td></td></tr><tr><td></td><td>羽绒裤</td><td>1</td><td>260</td><td></td></tr><tr><td></td><td>三峰裙子</td><td>1</td><td>72</td><td></td></tr><tr><td></td><td>羊毛T恤</td><td>1</td><td>165</td><td></td></tr><tr><td></td><td>老鼠神衣</td><td>1</td><td>272</td><td></td></tr><tr><td></td><td>始祖鸟冲锋衣</td><td>1</td><td>340</td><td></td></tr><tr><td></td><td>羽绒服</td><td>1</td><td>340</td><td></td></tr><tr><td></td><td>羊毛帽子</td><td>1</td><td>78</td><td></td></tr><tr><td></td><td>buff太阳帽</td><td>1</td><td>30</td><td></td></tr><tr><td></td><td>羊毛内衣</td><td>1</td><td>202</td><td></td></tr><tr><td></td><td>羊毛内裤</td><td>1</td><td>168</td><td></td></tr><tr><td></td><td>内裤</td><td>1</td><td>40</td><td></td></tr><tr><td></td><td>羽绒脚套</td><td>1</td><td>150</td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td>电器</td><td>小米一万毫安</td><td>1</td><td>226</td><td></td></tr><tr><td></td><td>Apple Watch充电器</td><td>1</td><td>24</td><td></td></tr><tr><td></td><td>紫米Type-C充电线+Lightning转接头+microUSB转接头</td><td>1</td><td>30</td><td></td></tr><tr><td></td><td>Apple Watch 5</td><td>1</td><td>63</td><td></td></tr><tr><td></td><td>iPhone 11</td><td>1</td><td>220</td><td></td></tr><tr><td></td><td>充电器</td><td>1</td><td>43</td><td></td></tr><tr><td></td><td>头灯</td><td>1</td><td>34</td><td></td></tr><tr><td></td><td>伏来阳太阳能板</td><td>1</td><td>207</td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td>杂项</td><td>牙刷牙膏毛巾</td><td>1</td><td>90</td><td></td></tr><tr><td></td><td>眼镜</td><td>1</td><td>23</td><td></td></tr><tr><td></td><td>救生哨、打火棒</td><td>1</td><td>33</td><td></td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>artemis的消息持久问题</title>
      <link href="/2020/03/27/artemis%E7%9A%84%E6%B6%88%E6%81%AF%E6%8C%81%E4%B9%85%E9%97%AE%E9%A2%98/"/>
      <url>/2020/03/27/artemis%E7%9A%84%E6%B6%88%E6%81%AF%E6%8C%81%E4%B9%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>根据<a href="https://activemq.apache.org/how-does-a-queue-compare-to-a-topic">How does a Queue compare to a Topic</a>的介绍, 以下是原文:</p><blockquote><p>Topics<br>In JMS a Topic implements publish and subscribe semantics. When you publish a message it goes to all the subscribers who are interested - so zero to many subscribers will receive a copy of the message. Only subscribers who had an active subscription at the time the broker receives the message will get a copy of the message.</p></blockquote><blockquote><p>Queues<br>A JMS Queue implements load balancer semantics. A single message will be received by exactly one consumer. If there are no consumers available at the time the message is sent it will be kept until a consumer is available that can process the message. If a consumer receives a message and does not acknowledge it before closing then the message will be redelivered to another consumer. A queue can have many consumers with messages load balanced across the available consumers.</p></blockquote><blockquote><p>So Queues implement a reliable load balancer in JMS.</p></blockquote><p>说明, 以topic形式出现的消息在没有订阅者的情况下, 并不能持久化, 而是直接丢弃了. 只有发布在queue中才能持久化. 其表现为, 通过MQTT发布的topic, 在没有特别配置的情况下, 就是说在topic与queue都是auto-create的情况下, 消息会在没有消费者的情况下直接丢失. </p><p>通过配置storker.xml文件, 可以指定某个address生成queue, 比如:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span> <span class="attr">name</span>=<span class="string">&quot;sometopic&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">anycast</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">queue</span> <span class="attr">name</span>=<span class="string">&quot;sometopic&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">anycast</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这时, 发送到这个topic上的消息就可以持久化了. </p><p>但这里要注意, 如果是:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span> <span class="attr">name</span>=<span class="string">&quot;sometopic&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">multicast</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">queue</span> <span class="attr">name</span>=<span class="string">&quot;sometopic&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">multicast</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure><p>会形成一个publish/subscribe形式, 根据上文指出的, 就不会持久化消息.</p><p>最后, mqtt缺省的就是publish/subscribe模型, 在没有订阅者的情况下就是会丢失消息.</p>]]></content>
      
      
      
        <tags>
            
            <tag> artemis mqtt program </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019梅里装备列表</title>
      <link href="/2019/09/01/%E6%A2%85%E9%87%8C%E8%A3%85%E5%A4%87/"/>
      <url>/2019/09/01/%E6%A2%85%E9%87%8C%E8%A3%85%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<h2 id="然后没有实现-去了梅里"><a href="#然后没有实现-去了梅里" class="headerlink" title="然后没有实现, 去了梅里"></a>然后没有实现, 去了梅里</h2><table><thead><tr><th>类别</th><th>名称</th><th>数量</th><th>重量</th><th>Check</th></tr></thead><tbody><tr><td>三大件</td><td>田野睡袋</td><td>1</td><td>872</td><td>OK</td></tr><tr><td></td><td>therm-a-rest xlite+气泵</td><td>1</td><td>415</td><td>OK</td></tr><tr><td></td><td>AMK Bivy 地布</td><td>1</td><td>101</td><td>OK</td></tr><tr><td></td><td>酱铺cuben天幕加吊床</td><td>1</td><td>681</td><td>OK</td></tr><tr><td></td><td>酱铺背架</td><td>1</td><td>1010</td><td>OK</td></tr><tr><td>炊具</td><td>SOTO WindMaster</td><td>1</td><td>49</td><td>OK</td></tr><tr><td></td><td>柴火炉</td><td>1</td><td>160</td><td>OK</td></tr><tr><td></td><td>铝锅</td><td>1</td><td>96</td><td>OK</td></tr><tr><td></td><td>Flod-A-Cup 折叠水杯</td><td>1</td><td>50</td><td>OK</td></tr><tr><td></td><td>3升康迪净水水袋</td><td>1</td><td>102</td><td>OK</td></tr><tr><td></td><td>膳魔师FEK800</td><td>1</td><td>194</td><td>OK</td></tr><tr><td>衣服</td><td>smartwood袜子</td><td>1</td><td>68</td><td>OK</td></tr><tr><td></td><td>outdome袜子</td><td>1</td><td>60</td><td>OK</td></tr><tr><td></td><td>防沙套</td><td>1</td><td>40</td><td></td></tr><tr><td></td><td>速干长裤</td><td>1</td><td>320</td><td>OK</td></tr><tr><td></td><td>羽绒裤</td><td>1</td><td>260</td><td>OK</td></tr><tr><td></td><td>冲锋裤</td><td>1</td><td>268</td><td>OK</td></tr><tr><td></td><td>羊毛T恤</td><td>1</td><td>165</td><td>OK</td></tr><tr><td></td><td>老鼠神衣</td><td>1</td><td>272</td><td>OK</td></tr><tr><td></td><td>始祖鸟冲锋衣</td><td>1</td><td>340</td><td>OK</td></tr><tr><td></td><td>羽绒服</td><td>1</td><td>340</td><td>OK</td></tr><tr><td></td><td>迪卡侬手套</td><td>1</td><td>103</td><td></td></tr><tr><td></td><td>羊毛帽子</td><td>1</td><td>78</td><td>OK</td></tr><tr><td></td><td>棒球帽</td><td>1</td><td>100</td><td>OK</td></tr><tr><td></td><td>羊毛内衣</td><td>1</td><td>202</td><td>OK</td></tr><tr><td></td><td>羊毛内裤</td><td>1</td><td>168</td><td>OK</td></tr><tr><td></td><td>内裤</td><td>1</td><td>40</td><td>OK</td></tr><tr><td></td><td>羽绒胶套</td><td>1</td><td>150</td><td>OK</td></tr><tr><td>电器</td><td>小米一万毫安</td><td>1</td><td>226</td><td>OK</td></tr><tr><td></td><td>Garmin充电线</td><td>1</td><td>15</td><td>OK</td></tr><tr><td></td><td>Type-C充电线</td><td>1</td><td>30</td><td>OK</td></tr><tr><td></td><td>北斗海聊</td><td></td><td>233</td><td>OK</td></tr><tr><td></td><td>iPhone 11</td><td>1</td><td>220</td><td>OK</td></tr><tr><td></td><td>充电器</td><td>1</td><td>43</td><td>OK</td></tr><tr><td></td><td>头灯</td><td>1</td><td>34</td><td>OK</td></tr><tr><td>杂项</td><td>牙刷牙膏毛巾</td><td>1</td><td>90</td><td>OK</td></tr><tr><td></td><td>眼镜</td><td>1</td><td>23</td><td>OK</td></tr><tr><td></td><td>救生哨、打火棒</td><td>1</td><td>33</td><td>OK</td></tr><tr><td></td><td>Garmin forunner 935</td><td>1</td><td>50</td><td>OK</td></tr><tr><td></td><td>三峰bivy</td><td>1</td><td>140</td><td>OK</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> 户外 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为的快速充电标准</title>
      <link href="/2018/07/05/%E5%8D%8E%E4%B8%BA%E7%9A%84%E5%BF%AB%E9%80%9F%E5%85%85%E7%94%B5%E6%A0%87%E5%87%86/"/>
      <url>/2018/07/05/%E5%8D%8E%E4%B8%BA%E7%9A%84%E5%BF%AB%E9%80%9F%E5%85%85%E7%94%B5%E6%A0%87%E5%87%86/</url>
      
        <content type="html"><![CDATA[<p>华为手机的superCharge支持的<br>超级快充标准是 5V4.5A、4.5V5A<br>快速充电标准是 9V2A<br>普通充电标准是 5V2A 5V1A</p><p>如果充电线支持的是2A的电流，那么用原装SuperChange充电头，反而只能普通充电模式<br>充电宝要想快速充电，要支持到9V2A的输出才行，否则只能普通充电模式</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Garmin forerunner 935 添加导航路径</title>
      <link href="/2018/05/06/Garmin-forerunner-935-%E6%B7%BB%E5%8A%A0%E5%AF%BC%E8%88%AA%E8%B7%AF%E5%BE%84/"/>
      <url>/2018/05/06/Garmin-forerunner-935-%E6%B7%BB%E5%8A%A0%E5%AF%BC%E8%88%AA%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<p>Garmin这个奸商，广告里不带导航功能的手表连倒入路径都不支持，就算是准旗舰的forerunner 935。但其实要倒入导航路径很简单。</p><ol><li>登录<a href="https://connectus.garmin.cn/modern/courses">Garmin Connect</a>，使用“导入”功能来把gpx路径导入到Garmin Connect中。</li></ol><p><img src="/images/garmin/course.png" alt="倒入路径"></p><ol start="2"><li>选中刚刚倒入的路径</li></ol><p><img src="/images/garmin/detail.png" alt="路径详情"></p><ol start="3"><li>下载路径为FIT格式</li></ol><p><img src="/images/garmin/download.png" alt="FIT格式"></p><ol start="4"><li><p>把手表通过USB连接到电脑上，连接模式选择大容量存储</p></li><li><p>把下载的FIT文件拷贝到如图的“COURSES”目录下</p></li></ol><p><img src="/images/garmin/directory.png" alt="目录"></p><ol start="6"><li>Well done, and enjoy!</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cesium学习笔记</title>
      <link href="/2018/04/16/cesium%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/04/16/cesium%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="2018-05-28"><a href="#2018-05-28" class="headerlink" title="2018.05.28"></a>2018.05.28</h3><p>至少在Chrome浏览器中，Cesium 的  Double_Click 事件触发之前会触发两次 Click 事件，所以并不推荐使用 Double_Click 事件来处理操作</p><h3 id="2018-05-21"><a href="#2018-05-21" class="headerlink" title="2018.05.21"></a>2018.05.21</h3><p>Geometry 不是地形的一部分，但 3DTileset 的 model 是</p><p>Geometry的缺省boundingsphere 是整个地球</p><p>Viewer.extend(Cesium.viewerCesium3DTilesInspectorMixin) 添加后会造成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">viewer.screenSpaceEventHandler.setInputAction(<span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> picked = viewer.scene.pick(event.endPosition);</span><br><span class="line">        <span class="keyword">if</span> (picked !== prePicked) &#123;</span><br><span class="line">                <span class="keyword">if</span> (prePicked) prePicked.color = preStyle;</span><br><span class="line">                <span class="keyword">if</span> (picked) &#123;</span><br><span class="line">                        prePicked = picked, preStyle = picked.color;</span><br><span class="line">                        picked.color = Cesium.Color.YELLOW.withAlpha(<span class="number">0.5</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;, Cesium.ScreenSpaceEventType.MOUSE_MOVE);</span><br></pre></td></tr></table></figure><p>这段代码出问题，它好像会改变 preStyle 的颜色</p><h3 id="2018-05-14"><a href="#2018-05-14" class="headerlink" title="2018.05.14"></a>2018.05.14</h3><p><a href="https://cesium.com/blog/2018/05/01/cesium-version-1.45-released/">https://cesium.com/blog/2018/05/01/cesium-version-1.45-released/</a></p><p>测试线段长度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> hierarchy = entity.polyline.positions._value;</span><br><span class="line">        hierarchy = Cesium.PolylinePipeline.generateArc(&#123;</span><br><span class="line">            positions: hierarchy,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">let</span> vector = <span class="keyword">new</span> Cesium.Cartesian3();</span><br><span class="line">        <span class="keyword">let</span> distance = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">3</span>; i &lt; hierarchy.length; i += <span class="number">3</span>) &#123;</span><br><span class="line">            vector.x = hierarchy[i] - hierarchy[i - <span class="number">3</span>];</span><br><span class="line">            vector.y = hierarchy[i + <span class="number">1</span>] - hierarchy[i - <span class="number">2</span>];</span><br><span class="line">            vector.z = hierarchy[i + <span class="number">2</span>] - hierarchy[i - <span class="number">1</span>];</span><br><span class="line">            distance += Cesium.Cartesian3.magnitude(vector);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>测试polygon的面积</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Get the polygon from your &quot;entity&quot;</span></span><br><span class="line"><span class="keyword">var</span> polygon = theEntity.polygon;</span><br><span class="line"><span class="keyword">var</span> hierarchy = polygon.hierarchy._value;</span><br><span class="line"><span class="comment">// &quot;indices&quot; here defines an array, elements of which defines the indice of a vector</span></span><br><span class="line"><span class="comment">// defining one corner of a triangle. Add up the areas of those triangles to get</span></span><br><span class="line"><span class="comment">// an approximate area for the polygon</span></span><br><span class="line"><span class="keyword">var</span> indices = Cesium.PolygonPipeline.triangulate(hierarchy.positions, hierarchy.holes);</span><br><span class="line"><span class="keyword">var</span> area = <span class="number">0</span>; <span class="comment">// In square kilometers</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; indices.length; i += <span class="number">3</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> vector1 = hierarchy.positions[indices[i]];</span><br><span class="line">  <span class="keyword">var</span> vector2 = hierarchy.positions[indices[i+<span class="number">1</span>]];</span><br><span class="line">  <span class="keyword">var</span> vector3 = hierarchy.positions[indices[i+<span class="number">2</span>]];</span><br><span class="line">  <span class="comment">// These vectors define the sides of a parallelogram (double the size of the triangle)</span></span><br><span class="line">  <span class="keyword">var</span> vectorC = Cesium.Cartesian3.subtract(vector2, vector1, <span class="keyword">new</span> Cesium.Cartesian3());</span><br><span class="line">  <span class="keyword">var</span> vectorD = Cesium.Cartesian3.subtract(vector3, vector1, <span class="keyword">new</span> Cesium.Cartesian3());</span><br><span class="line">  <span class="comment">// Area of parallelogram is the cross product of the vectors defining its sides</span></span><br><span class="line">  <span class="keyword">var</span> areaVector = Cesium.Cartesian3.cross(vectorC, vectorD, <span class="keyword">new</span> Cesium.Cartesian3());</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Area of the triangle is just half the area of the parallelogram, add it to the sum.</span></span><br><span class="line">  area += Cesium.Cartesian3.magnitude(areaVector)/<span class="number">2.0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>来自 <a href="https://groups.google.com/forum/#!topic/cesium-dev/EimmL-poCDI">https://groups.google.com/forum/#!topic/cesium-dev/EimmL-poCDI</a> </p><p>3DTileset不是一次性加入全部tile，所以要定位到某个tile，必须在外部保存tile的某个属性和它的位置地址，把视角平移过去后，在3DTileset加载完成后。才可以通过 3DTileset.tileVisible 找到有这个属性的 feature 然后着色，或者通过 Cesium3DTileStyle 着色。</p><p>根据建筑物坐标与高度，定位并调整视角</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> long = <span class="number">-1.2917727072831369</span>, lat = <span class="number">0.7105749513910979</span>, height = <span class="number">547.7591871983744</span>;</span><br><span class="line"><span class="keyword">let</span> heading = viewer.camera.heading, pitch = viewer.camera.pitch;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> position = viewer.scene.globe.ellipsoid.cartographicToCartesian(<span class="keyword">new</span> Cesium.Cartographic(long, lat, <span class="number">0.5</span> * height));</span><br><span class="line"><span class="keyword">let</span> offset = offsetFromHeadingPitchRange(heading, pitch, height * <span class="number">2.0</span>);</span><br><span class="line"><span class="keyword">let</span> transform = Cesium.Transforms.eastNorthUpToFixedFrame(position);</span><br><span class="line">Cesium.Matrix4.multiplyByPoint(transform, offset, position);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">offsetFromHeadingPitchRange</span>(<span class="params">heading, pitch, range</span>) </span>&#123;</span><br><span class="line">            pitch = Cesium.Math.clamp(pitch, -Cesium.Math.PI_OVER_TWO, Cesium.Math.PI_OVER_TWO);</span><br><span class="line">            heading = Cesium.Math.zeroToTwoPi(heading) - Cesium.Math.PI_OVER_TWO;</span><br><span class="line">            <span class="keyword">var</span> pitchQuat = Cesium.Quaternion.fromAxisAngle(Cesium.Cartesian3.UNIT_Y, -pitch);</span><br><span class="line">            <span class="keyword">var</span> headingQuat = Cesium.Quaternion.fromAxisAngle(Cesium.Cartesian3.UNIT_Z, -heading);</span><br><span class="line">            <span class="keyword">var</span> rotQuat = Cesium.Quaternion.multiply(headingQuat, pitchQuat, headingQuat);</span><br><span class="line">            <span class="keyword">var</span> rotMatrix = Cesium.Matrix3.fromQuaternion(rotQuat);</span><br><span class="line">            <span class="keyword">var</span> offset = Cesium.Cartesian3.clone(Cesium.Cartesian3.UNIT_X);</span><br><span class="line">            Cesium.Matrix3.multiplyByVector(rotMatrix, offset, offset);</span><br><span class="line">            Cesium.Cartesian3.negate(offset, offset);</span><br><span class="line">            Cesium.Cartesian3.multiplyByScalar(offset, range, offset);</span><br><span class="line">            <span class="keyword">return</span> offset;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子：<br><a href="http://www.virtualcitysystems.de/en/">http://www.virtualcitysystems.de/en/</a></p><p><a href="http://nrw.virtualcitymap.de/#/">http://nrw.virtualcitymap.de/#/</a></p><p><a href="http://www.3dcitydb.net/3dcitydb/fileadmin/3DWebClient/index.html">http://www.3dcitydb.net/3dcitydb/fileadmin/3DWebClient/index.html</a></p><p><a href="https://cesiumjs.org/demos/">https://cesiumjs.org/demos/</a></p><p><a href="http://cybercity3d.s3-website-us-east-1.amazonaws.com/?city=WashingtonDC">http://cybercity3d.s3-website-us-east-1.amazonaws.com/?city=WashingtonDC</a></p><h3 id="2018-05-08"><a href="#2018-05-08" class="headerlink" title="2018.05.08"></a>2018.05.08</h3><p>设置Home的位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Cesium.Camera.DEFAULT_VIEW_FACTOR = <span class="number">-0.3</span>;</span><br><span class="line">Cesium.Camera.DEFAULT_VIEW_RECTANGLE = tileset._root._boundingVolume.rectangle;</span><br></pre></td></tr></table></figure><p>Camera.lookAt 会锁住 camera 的视点，让鼠标不能移动 camera，需要 viewer.camera.lookAtTransform(Cesium.Matrix4.IDENTITY)</p><p>距离 3DTileset 1.5倍 boundingSpere.radius，<br>高度为 1.5 * distance / Math.tan(Cesium.Math.toRadians(70.0)），<br>heading: Cesium.Math.toRadians(0.0),<br>pitch: Cesium.Math.toRadians(-20.0),<br>roll: 0.0,<br>时候，角度比较好</p><p>通过 Camera.pickEllipsoid 得到的坐标是 WGS84 坐标系下的，在有地形信息的情况下就会偏移，就算通过 sampleTerrianMostDetailed 转化过也一样</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> coordinate = viewer.camera.pickEllipsoid(event.position, viewer.scene.globe.ellipsoid);</span><br><span class="line">coordinate = Cesium.Cartographic.fromCartesian(coordinate);</span><br><span class="line">Cesium.sampleTerrainMostDetailed(viewer.terrainProvider, [coordinate]).then(<span class="function">(<span class="params">samples</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> sample <span class="keyword">of</span> samples) sample.height += <span class="number">10.0</span>;</span><br><span class="line">            viewer.entities.add(&#123;</span><br><span class="line">                position: Cesium.Cartographic.toCartesian(samples[<span class="number">0</span>], viewer.scene.globe.ellipsoid),</span><br><span class="line">                point: &#123;</span><br><span class="line">                    pixelSize: <span class="number">5</span>,</span><br><span class="line">                    color: Cesium.Color.GREEN,</span><br><span class="line">                    heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>通过下面这个 Ray 相交得到的坐标是可以有地形高度的，取决于得到是有没有加载地形信息，如果有则有高度信息，没有就没有</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ray = viewer.camera.getPickRay(event.position);</span><br><span class="line">        <span class="keyword">let</span> positon = viewer.scene.globe.pick(ray, viewer.scene);</span><br><span class="line">        viewer.entities.add(&#123;</span><br><span class="line">            position: positon,</span><br><span class="line">            point: &#123;</span><br><span class="line">                pixelSize: <span class="number">5</span>,</span><br><span class="line">                color: Cesium.Color.LIME,     </span><br><span class="line">                heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,       </span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>screenSpaceEventHandler.setInputAction 居然一个类型只可以有一个事件监听</p><p>得到两点方向的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Add button to View Aircraft at a Fixed Angle relative to aircraft</span></span><br><span class="line">Sandcastle.addToolbarButton(<span class="string">&#x27;View Aircraft Fixed Angle&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    viewer.trackedEntity = <span class="literal">undefined</span>;</span><br><span class="line">    viewer.clock.onTick.addEventListener(<span class="function"><span class="keyword">function</span> (<span class="params">clock</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//get 2 positions close together timewise</span></span><br><span class="line">        <span class="keyword">var</span> CC3 = Cesium.Cartesian3;</span><br><span class="line">        <span class="keyword">var</span> position1 = entity.position.getValue(clock.currentTime, <span class="keyword">new</span> CC3());</span><br><span class="line">        <span class="keyword">var</span> position2 = entity.position.getValue(Cesium.JulianDate.addSeconds(clock.currentTime, <span class="number">1</span> / <span class="number">60</span>, <span class="keyword">new</span> Cesium.JulianDate()), <span class="keyword">new</span> CC3());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//velocity in terms of Earth Fixed        </span></span><br><span class="line">        <span class="keyword">var</span> Wvelocity = CC3.subtract(position2, position1, <span class="keyword">new</span> CC3());</span><br><span class="line">        CC3.normalize(Wvelocity, Wvelocity);</span><br><span class="line">        <span class="keyword">var</span> Wup = <span class="keyword">new</span> CC3(); <span class="keyword">var</span> Weast = <span class="keyword">new</span> CC3(); <span class="keyword">var</span> Wnorth = <span class="keyword">new</span> CC3();</span><br><span class="line">        Cesium.Ellipsoid.WGS84.geodeticSurfaceNormal(position1, Wup);</span><br><span class="line">        CC3.cross(&#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">z</span>: <span class="number">1</span> &#125;, Wup, Weast);</span><br><span class="line">        CC3.cross(Wup, Weast, Wnorth);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//velocity in terms of local ENU</span></span><br><span class="line">        <span class="keyword">var</span> Lvelocity = <span class="keyword">new</span> CC3();</span><br><span class="line">        Lvelocity.x = CC3.dot(Wvelocity, Weast);</span><br><span class="line">        Lvelocity.y = CC3.dot(Wvelocity, Wnorth);</span><br><span class="line">        Lvelocity.z = CC3.dot(Wvelocity, Wup);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//angle of travel</span></span><br><span class="line">        <span class="keyword">var</span> Lup = <span class="keyword">new</span> CC3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>); <span class="keyword">var</span> Least = <span class="keyword">new</span> CC3(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="keyword">var</span> Lnorth = <span class="keyword">new</span> CC3(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">var</span> x = CC3.dot(Lvelocity, Least);</span><br><span class="line">        <span class="keyword">var</span> y = CC3.dot(Lvelocity, Lnorth);</span><br><span class="line">        <span class="keyword">var</span> z = CC3.dot(Lvelocity, Lup);</span><br><span class="line">        <span class="keyword">var</span> angle = <span class="built_in">Math</span>.atan2(x, y);<span class="comment">//math: y b4 x, heading: x b4 y</span></span><br><span class="line">        <span class="keyword">var</span> pitch = <span class="built_in">Math</span>.asin(z);<span class="comment">//make sure Lvelocity is unitized</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//angles offsets</span></span><br><span class="line">        angle += <span class="number">0</span> / <span class="number">180</span> * <span class="built_in">Math</span>.PI;</span><br><span class="line">        pitch += <span class="number">-20</span> / <span class="number">180</span> * <span class="built_in">Math</span>.PI;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> range = <span class="number">80</span>;</span><br><span class="line">        <span class="keyword">var</span> offset = <span class="keyword">new</span> Cesium.HeadingPitchRange(angle, pitch, range);</span><br><span class="line">        viewer.scene.camera.lookAt(entity.position.getValue(clock.currentTime), offset);</span><br><span class="line">    &#125;); <span class="comment">//end event listener</span></span><br><span class="line">&#125;); <span class="comment">//end button</span></span><br></pre></td></tr></table></figure><p>orientation : new Cesium.VelocityOrientationProperty(position) 可以得到某点的方向，但 position 需要是 Cesium.SampledProperty 根据时间的采样属性</p><h3 id="2018-05-07"><a href="#2018-05-07" class="headerlink" title="2018.05.07"></a>2018.05.07</h3><p>Globe 上的 ClippingPlane 定一个法向量就可以了，distance是相对与 ClippingPlaneCollection 的 ModelMatrix 的，它是以笛卡尔坐标系的中心建立了一个穿过整个坐标系的平面组，所以会在地球表面形成两个相对的切面。</p><p>如何计算一个离某个点距离为 radius 的圆的坐标：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> n = <span class="number">180</span>, points = [];</span><br><span class="line"><span class="keyword">let</span> center = tileset.boundingSphere.center, radius = tileset.boundingSphere.radius;</span><br><span class="line"><span class="keyword">let</span> R = viewer.scene.globe.ellipsoid.maximumRadius; <span class="comment">//地球半径</span></span><br><span class="line">center = Cesium.Cartographic.fromCartesian(center); <span class="comment">//转成经纬度坐标</span></span><br><span class="line"><span class="comment">//latB = latA-((radius * Math.sin(Math.PI * i / n)) * 180) / (Math.PI * ellipsoid.R)</span></span><br><span class="line"><span class="comment">//latB = LatA-(Y*180)/(Math.PI * e)</span></span><br><span class="line"><span class="comment">//loB = loA - ((rdius * Math.cost(Math.PI * i / n)) * 180) / (Math.PI * ellipsoid.R * Math.cos((LatA + LatB) / 2))</span></span><br><span class="line"><span class="comment">//loB = loA - (x*180)/(math.pi * r * cost((latA + latB) / 2))</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = -n; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="built_in">Math</span>.cos(<span class="built_in">Math</span>.PI * i / n) * radius;</span><br><span class="line">    <span class="keyword">let</span> y = <span class="built_in">Math</span>.sin(<span class="built_in">Math</span>.PI * i / n) * radius;</span><br><span class="line">    <span class="comment">//let LatB = center.latitude - (y * 180) / (Math.PI * R);</span></span><br><span class="line">    <span class="keyword">let</span> LatB = center.latitude - (y / R);</span><br><span class="line">    <span class="comment">//let LonB = center.longitude - (x * 180) / (Math.PI * R * Math.cos((center.latitude + LatB) / 2));</span></span><br><span class="line">    <span class="keyword">let</span> LonB = center.longitude - (x / (R * <span class="built_in">Math</span>.cos((center.latitude + LatB) / <span class="number">2</span>)));</span><br><span class="line">    <span class="keyword">let</span> point = <span class="keyword">new</span> Cesium.Cartographic(LonB, LatB);</span><br><span class="line">    point = viewer.scene.globe.ellipsoid.cartographicToCartesian(point);</span><br><span class="line">    points.push(point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是不精确的版本，在小范围误差可接受，参考自<a href="https://tech.meituan.com/lucene-distance.html">地理空间距离计算优化</a></p><p>Polyline 这个 Geometry 不支持 heightReference，于是不会自动贴地。必须通过 Cesium.sampleTerrainMostDetailed 这个方法吧 positions 中的点进行高度调整，其中 pointsR 为高度为零的 Cartographic 对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Cesium.when(Cesium.sampleTerrainMostDetailed(viewer.terrainProvider, pointsR), <span class="function">(<span class="params">samples</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> sample <span class="keyword">of</span> samples) sample.height += <span class="number">10.0</span>;</span><br><span class="line">    viewer.entities.add(&#123;</span><br><span class="line">        polyline: &#123;</span><br><span class="line">            positions: Cesium.Ellipsoid.WGS84.cartographicArrayToCartesianArray(samples),</span><br><span class="line">            width: <span class="number">5</span>,</span><br><span class="line">            material: Cesium.Color.WHITE,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="2018-05-03"><a href="#2018-05-03" class="headerlink" title="2018.05.03"></a>2018.05.03</h3><p>不支持 KHR_materials_pbrSpecularGlossiness </p><p>Entity 保存了 Graphic<br>Graphic 保存 Geometry 对象的描述属性，但没有定义怎么画出这个对象</p><p>Billboard:</p><p>Billboard</p><ul><li>@performance Reading a property, e.g., {@link Billboard#show}, is constant time.</li><li>Assigning to a property is constant time but results in</li><li>CPU to GPU traffic when {@link BillboardCollection#update} is called. The per-billboard traffic is</li><li>the same regardless of how many properties were updated. If most billboards in a collection need to be</li><li>updated, it may be more efficient to clear the collection with {@link BillboardCollection#removeAll}</li><li>and add new billboards instead of modifying each one.<br>照这么说来，当 BillboardCollection.update 的时候才会处理成 GPU 的数据发送至 GPU</li></ul><p>BillboradGraphics<br>BillboardGraphicsSpec</p><p>BillboardCollection<br>BillboardCollectionSpec</p><p>BillboardVisualizer<br>BillboardVisualizerSpec</p><p>BillboardCollectionFS.glsl<br>BillboardCollectionVS.glsl</p><p>createBillboardPointCallback </p><p>Entity 不指定方向的情况下用 eastNorthUpToFixedFrame</p><h3 id="2018-04-27"><a href="#2018-04-27" class="headerlink" title="2018.04.27"></a>2018.04.27</h3><p>Cesium 画geometry的效率<br>Billboard 》polyline &gt; box = plane 》 polygon(不带挤压高度) &gt; polygon(带挤压高度) </p><p>一万个 ellipse ellipsoid cylinder corrdior 会有内存不足的问题</p><p>画一个带指示线的标签</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> viewer = <span class="keyword">new</span> Cesium.Viewer(<span class="string">&#x27;cesiumContainer&#x27;</span>,</span><br><span class="line">                               &#123;<span class="attr">timeline</span>: <span class="literal">false</span>, <span class="attr">animation</span>: <span class="literal">false</span>&#125;);</span><br><span class="line"><span class="keyword">var</span> scene = viewer.scene;</span><br><span class="line"><span class="keyword">var</span> offsetX = <span class="number">50</span>, offsetY = <span class="number">-80</span>;</span><br><span class="line"><span class="keyword">var</span> pos = Cesium.Cartesian3.fromDegrees(<span class="number">-75.1641667</span>, <span class="number">29.9522222</span>);</span><br><span class="line"><span class="keyword">var</span> labels = scene.primitives.add(<span class="keyword">new</span> Cesium.LabelCollection());</span><br><span class="line">labels.add(&#123;</span><br><span class="line">    position: pos,</span><br><span class="line">    text: <span class="string">&#x27;Another label&#x27;</span>,</span><br><span class="line">    pixelOffset: <span class="keyword">new</span> Cesium.Cartesian2(offsetX, offsetY)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">&#x27;canvas&#x27;</span>);</span><br><span class="line">canvas.width = <span class="built_in">Math</span>.abs(offsetX);</span><br><span class="line">canvas.height = <span class="built_in">Math</span>.abs(offsetY);</span><br><span class="line"><span class="keyword">var</span> context2D = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">context2D.beginPath();</span><br><span class="line">context2D.lineWidth = <span class="number">3</span>;</span><br><span class="line">context2D.strokeStyle = <span class="string">&#x27;#ffffff&#x27;</span>;</span><br><span class="line">context2D.moveTo((offsetX &lt; <span class="number">0</span>) ? -offsetX : <span class="number">0</span>, (offsetY &lt; <span class="number">0</span>) ? -offsetY : <span class="number">0</span>);</span><br><span class="line">context2D.lineTo((offsetX &lt; <span class="number">0</span>) ? <span class="number">0</span> : offsetX, (offsetY &lt; <span class="number">0</span>) ? <span class="number">0</span> : offsetY);</span><br><span class="line">context2D.stroke();</span><br><span class="line"><span class="keyword">var</span> billboards = scene.primitives.add(<span class="keyword">new</span> Cesium.BillboardCollection());</span><br><span class="line"><span class="keyword">var</span> billboard = billboards.add(&#123;</span><br><span class="line">    color : Cesium.Color.RED,</span><br><span class="line">    image : canvas,</span><br><span class="line">    pixelOffset: <span class="keyword">new</span> Cesium.Cartesian2(offsetX * <span class="number">0.5</span>, offsetY * <span class="number">0.5</span>),</span><br><span class="line">    position : pos</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://stackoverflow.com/questions/32716118/cesium-js-how-draw-line-binding-a-label-to-a-position">https://stackoverflow.com/questions/32716118/cesium-js-how-draw-line-binding-a-label-to-a-position</a></p><h3 id="2018-04-26"><a href="#2018-04-26" class="headerlink" title="2018.04.26"></a>2018.04.26</h3><p>Primitive 对象有定点着色器与片元着色器的源代码入口</p><p>Viewer.scene.drillPick 返回的 pickedObjects 数组对象<br>pickedObject.id 为 entity<br>pickedObject.primitive 为相应的 primitive 对象</p><p>添加X,Y,Z三轴线</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> modelMatrix = Cesium.Transforms.headingPitchRollToFixedFrame(position, hprRollZero, Cesium.Ellipsoid.WGS84, converter);</span><br><span class="line">    scene.primitives.add(<span class="keyword">new</span> Cesium.DebugModelMatrixPrimitive(&#123;</span><br><span class="line">        modelMatrix : modelMatrix,</span><br><span class="line">        length : <span class="number">300.0</span>,</span><br><span class="line">        width : <span class="number">10.0</span></span><br><span class="line">    &#125;));</span><br></pre></td></tr></table></figure><h3 id="2018-04-24"><a href="#2018-04-24" class="headerlink" title="2018.04.24"></a>2018.04.24</h3><p>Geometry画出来的图形是以地球坐标系来画的， Model是以模型自身的坐标系来画的，3DTileset是以地球坐标系来画的</p><p>3DTileset.debugWireframe可以显示骨架</p><h3 id="2018-04-16"><a href="#2018-04-16" class="headerlink" title="2018.04.16"></a>2018.04.16</h3><p>Cesium Pick有BUG，它是根据3DTiles的boundingSphere加上geometryError来确定模型占地面积，由maximumHeight的两倍来确定模型的高度。模型在这个范围内浮动，不会有明显的问题，超出这个范围就会有点选不中，显示异常的问题。</p><p>3DTileset的modelMatrix是整个set共用的，pickedFeature里的</p>]]></content>
      
      
      
        <tags>
            
            <tag> cesium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>porlex mini 调豆子</title>
      <link href="/2018/03/06/porlex-mini-%E8%B0%83%E8%B1%86%E5%AD%90/"/>
      <url>/2018/03/06/porlex-mini-%E8%B0%83%E8%B1%86%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/cafe/porlexMiniAdjust.jpg" alt="题图"></p><ul><li>两格：均匀度较好，粉细，用于爱乐压则下压压力比较大</li><li>三、四格：均匀度尚可，手冲与爱乐压时水温要控制，不要太高</li><li>五、六格：均匀度最差，不推荐用这个刻度</li><li>七格：均匀度相对五有提升，颗粒合适法压，如果用于手冲，水温可高，合适户外、旅行等对温度比较不好控制的场合</li><li>十格：颗粒过大，没可用性</li></ul>]]></content>
      
      
      <categories>
          
          <category> 咖啡 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>鱼家之哥斯达黎加赛罗庄园黄蜜</title>
      <link href="/2018/03/03/%E9%B1%BC%E5%AE%B6%E4%B9%8B%E5%93%A5%E6%96%AF%E8%BE%BE%E9%BB%8E%E5%8A%A0%E8%B5%9B%E7%BD%97%E5%BA%84%E5%9B%AD%E9%BB%84%E8%9C%9C/"/>
      <url>/2018/03/03/%E9%B1%BC%E5%AE%B6%E4%B9%8B%E5%93%A5%E6%96%AF%E8%BE%BE%E9%BB%8E%E5%8A%A0%E8%B5%9B%E7%BD%97%E5%BA%84%E5%9B%AD%E9%BB%84%E8%9C%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="鱼家的哥斯达黎加赛罗庄园黄蜜"><a href="#鱼家的哥斯达黎加赛罗庄园黄蜜" class="headerlink" title="鱼家的哥斯达黎加赛罗庄园黄蜜"></a>鱼家的哥斯达黎加赛罗庄园黄蜜</h2><p><img src="/images/cafe/20180303%E9%B1%BC%E5%AE%B6%E5%93%A5%E6%96%AF%E8%BE%BE%E9%BB%8E%E5%8A%A0%E8%B5%9B%E7%BD%97%E5%BA%84%E5%9B%AD%E9%BB%84%E8%9C%9C.jpg" alt="题图"></p><blockquote><p>产地：哥斯达黎加</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 咖啡 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>哥斯达黎加黑蜜</title>
      <link href="/2017/11/09/%E5%93%A5%E6%96%AF%E8%BE%BE%E9%BB%8E%E5%8A%A0%E9%BB%91%E8%9C%9C/"/>
      <url>/2017/11/09/%E5%93%A5%E6%96%AF%E8%BE%BE%E9%BB%8E%E5%8A%A0%E9%BB%91%E8%9C%9C/</url>
      
        <content type="html"><![CDATA[<blockquote><p><img src="/images/cafe/20171104.JPG"><br>哥斯达黎加 塔拉珠 Canet Community<br>卡杜艾, 卡杜拉种<br>海拔 1700-1800<br>黑蜜处理</p></blockquote><a id="more"></a><p>这个豆子来自Canet Commuity, 这是一个由46家农庄组成的小社区. 有意思的是, 这里主要种植的是百香果, 咖啡算是副业了, 每年的产量都不大. 正因为如此, 也就可以采取特别严格的标准来采收选择豆子.</p><p>这豆子刚冲出来时, 并没有黑蜜处理那种酒味, 反而有着一种奶油瓜子的味道. 入口时, 伴随着奶油瓜子的浓香, 坚果的味道在口中回荡. 慢慢的, 一种甘草的苦味回上来, 让人感到仿佛在喝甘草茶.</p><p>时间流动, 温度下降, 奶油瓜子渐渐隐到背景之中. 甘草，柚子的味道占据了主频道，回味中醇香型白酒的味道在喉咙深处隐隐游荡．</p><p>温度进一步的下降，一种巧克力味道慢慢涌了上来，与仙草冻一起，结束了这美妙的味觉协奏曲．</p><p>这款黑蜜处理的咖啡豆在各个温度阶段都有着明确的主调，但之前表现过的调性也没有丢失，而是形成的背景，与当前的主调性完美的组合在一起，真不愧是以＂巴赫＂为名．</p><p><img src="/images/cafe/%E5%A4%8F%E4%BC%8D.png"></p><p>夏伍算是一家非常小的店, 就一个小店面, 背后看着都是一家人. 桌子就三张, 生意不错, 想来手冲之外的东西也是挺好的.<br>有一段时间没有去了，春节去的时候发现居然拆迁了，据说是要搬到边上的万科广场去。</p>]]></content>
      
      
      <categories>
          
          <category> 咖啡 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>贡嘎装备</title>
      <link href="/2017/10/12/%E8%B4%A1%E5%98%8E%E8%A3%85%E5%A4%87/"/>
      <url>/2017/10/12/%E8%B4%A1%E5%98%8E%E8%A3%85%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<p>这次贡嘎之行, 因某些意外加上老天配合, 于是晴天, 下雨, 冰雹, 下雪再加雨中夜路全都遇到了, 倒也是对装备全面的检测, 对我这个装备党来说, 苦逼是苦逼了一些, 但能看到自己找来的装备的好坏倒也是一种奇葩的乐趣.</p><p><img src="/images/gonga/%E8%90%A5%E5%9C%B0%E6%99%92%E8%A3%85%E5%A4%87.JPG" alt="苦逼营地晒装备"></p><a id="more"></a><h2 id="从衣服说起吧"><a href="#从衣服说起吧" class="headerlink" title="从衣服说起吧"></a>从衣服说起吧</h2><blockquote><p><img src="/images/gonga/%E7%BA%A2%E9%B8%9F%E4%B8%8E%E7%99%BD%E8%A3%99.jpeg" alt="裙子与冲锋衣"></p><p>最爱那一抹白色裙子上的蚊子血</p></blockquote><h3 id="冲锋衣"><a href="#冲锋衣" class="headerlink" title="冲锋衣"></a>冲锋衣</h3><blockquote><p><img src="/images/gonga/%E9%B8%9F%E5%86%B2.jpg" alt="鸟家冲锋衣"></p><p>Arc’teryx Alpha SL Hybrid Jacket-Men’s</p></blockquote><p>就在题图野外大晒衣的前一天晚上, 用这件衣服顶着冰雹, 小雪, 小雨从下午四点走到晚上八点半才到营地, 也能保的上半身干爽. 于是那些说 Gore-Tex® PacLite®的观点, 其实我是不信的.</p><p>结论: 重量３４０克左右挺好的, 暂没有升级的想法与必要.</p><h3 id="裙子"><a href="#裙子" class="headerlink" title="裙子"></a>裙子</h3><blockquote><p><img src="/images/gonga/%E8%A3%99%E5%AD%90.JPG" alt="伪娘范"></p><p>三峰家的白裙子</p></blockquote><p>自从迪姐的<del>我的户外伪娘生涯</del><a href="http://bbs.8264.com/forum-viewthread-tid-2026879-page-1-authorid-92276.html">裙角飞扬：一个人的格聂，非典型轻量化装备！</a>，之后就对如何在户外<del>装伪娘</del>轻量化的下半身防雨有了新期待．于是出发前搞了三峰的涂硅裙子决定与<del>贡嘎拼了</del>速干裤配合, 要不然在福州穿着冲锋裤出发, 那酸爽难以想像. 或者是单独带个速干裤, 也是我这种<del>可以好几天不洗澡</del>玩轻量化的人所不喜欢的多余重量.</p><p>其实出发前我对这个裙子是有些不屑的, 这种涂硅裙子轻飘飘的没什么质感, 风一吹就能装梦露, 而且还不是狗踢死.</p><p><img src="/images/gonga/%E6%A2%A6%E9%9C%B2.jpeg" alt="来一个梦露"></p><p><strong>毛主席教导我们: 装备还是用着好!</strong></p><p>于是还是在题图野外大晒衣的前一天晚上, 这条涂硅裙子居然真的保住了我下<del>体</del>半身的干爽, 当然我的鞋是湿的, 这是后话. 这么薄的涂硅面料在一堆的矮灌木中走过, 居然<del>不带走一丝云彩</del>没有被刮破, 也真是利害. 不过由于本人的<del>投降主义思想</del>懒, 在爬日乌且垭口的小雨中没有穿上这条裙子, 所以在垭口爬升的大风中表现如何还有待测试.</p><p>结论: 在没什么风的情况下, 这条裙子个人感觉可以完全替换冲锋裤, 与速干配合, 适合更多场景.</p><h3 id="神衣"><a href="#神衣" class="headerlink" title="神衣"></a>神衣</h3><blockquote><p><img src="/images/gonga/%E7%A5%9E%E8%A1%A3.JPG" alt="神衣"></p><p>混8264的一看标题就知道是什么东西.</p></blockquote><p>以前我有一个不带帽子的, 今年托海淘大神给搞了个带帽子的. 这次算是处女穿, 发现带个帽子还真是好啊! 不过带上帽子还真是丑啊! 当然人丑就要<del>多读书</del>少拍照, 于是就没找到带上帽子的丑照. 它的帽子里面是没有抓绒材料的, 想来就是一个用途, 扛风.<br>我带的是一个buff的帽子, 这帽子轻, 好收纳, 超透气, 于是完全的不防风. 高原很多的时候明明不是很冷但就是风太大, 吹的头痛, 加上神衣的帽子后, 那感觉风说不上停止了, 但也确实是小了非常多. 于是头也不痛了<del>腰也不酸了,走路也有劲了, 一气上五楼</del>. 不过说来因为把脖子也挡住了, 温标也提升了不少, 爬升的时候脖子还是会感觉有点过热, 可能这时候有个windstopper的帽子, 然后把脖子放出来凉快的解决方案会更好.</p><p>结论: 其实我一向不喜欢软壳, 太重收纳体积太大, 人肥的话(对,就是说我)还会过保温. 抓绒又完全的不防风, 有点小风那保温基本为零. 这些年玩户外, 行进间基本就是神衣, 加一件冲锋衣可以当中间层, 更多的时候就直接是最外层, 又防风又有一定的保温性能, 透气还特别的好, 绝对是行进间好衣服.</p><h3 id="羽绒套"><a href="#羽绒套" class="headerlink" title="羽绒套"></a>羽绒套</h3><blockquote><p><img src="/images/gonga/%E6%8A%96%E5%B8%90%E7%AF%B7.GIF" alt="抖帐篷"></p><p>那翩翩的中年走着魔性的脚步</p></blockquote><p>说来对于上班的苦逼来说, 也就只有国庆能走个长线<del>请还我们五一</del>. 这个时候, 西北西南这些个线都开始冷了, 于是羽绒服羽绒裤羽绒脚套的组合算是固定的了. 营地穿能极大的提升幸福感<del>另一个能极大提升幸福感的是拖鞋</del>配合睡袋还能极大的提升温标.</p><p>说来这件羽绒服与羽绒马甲与羽绒睡袋都已经八年了, 这算是华巍最早期的产品了. 当时咬牙买这些东西的场景仿佛还是昨天, 如今面对这些依旧好用的羽绒制品, 当初花的钱其实还是值得的, 我想最好的评价也就是如此了吧. 一件装备用着用着成了最顺手的老伙计, 岁月让一切都那么的自然, 自然的无话可说.</p><h2 id="背包"><a href="#背包" class="headerlink" title="背包"></a>背包</h2><blockquote><p><img src="/images/gonga/%E4%B8%89%E6%98%8E%E6%B2%BB.png" alt="酱铺的三明治"></p><p>给点饭可好</p></blockquote><p>这次的三明治算是新包, 要是不背它的话, 我就背上花岗岩烈火了. 烈火说来也是五年的包了, 每次要出掉时都舍不得然后放买家鸽子.<br><strong>白岩松说过: 背包还是防水的好!</strong><br>白老板真是英明, 我的这个三明治是用x-pac材料的, 防水背包的最大好处是自身防水外还不吸水, 不会有普通背包越淋越重的问题, 非常合适我这种老弱病残. 在第二天夜路加各种雨雪的情况下, 背包里没有单独防水设施的睡袋衣服都保持了干爽.另一个好处是因为包体防水, 里面就不用做防水措施了, 于是羽绒服羽绒裤羽绒脚套各种衣服就可以一统乱塞, 把包能撑的满满的, 包中无效体积会少很多.<br>三明治带了一个约二十升的网兜, 算是UL包中比较大的那种了, 挺能装的. 我塞进了帐篷, 地布, 地钉, 保温瓶, 酒精棉球, 裙子, 空水袋还有一把伞. 听上去没多少, 其实主要是我的1.0厚度的粗苯帐篷折叠体积实在是太大了, 折叠起来要比同大小的20D双硅帐篷大了一半这样子, 当初也是怕了才搞了这么厚的, 现在想想也是过头了吧? 本来酱铺推荐是网兜要用两边的弹力绳固定起来, 就是图中我用来绑可乐的弹力绳. 但, 酱桑, 你给的弹力绳太短啦! 我放了这么多东西后, 那绳子都被我拉到最大快断了也绑不上去, 只好这么自由自在由它去了.<br>三明治包的本体有四十五升的容量. 就其设计风格来说属于瘦高型的, 就是直径比较小, 靠包体高度的提升来调整容量. 于是就出现了提升到极限时包会过高, 抬头时会碰到包体的尴尬. 希望酱桑以后设计时, 能适当放宽包体, 减小包的高度. HMG的包在包口设计上加了一个魔术贴, 这个小设计粗看起来没什么用处, 在实际使用中就会发现, 一方面你能很方便的把包口合成一个长条然后开始圈, 另一方面当你把包升到最大时这个魔术贴还能保证你把包口给关起来. 而且HMG的包口可以向包两边封闭, 当装到最大只能合上包口不能多折几次的时候就非常用有了. 而三明治的包上面就没有这些设计, 在包打到最高的时候, 会尴尬的发现想要封起包口是个麻烦事情, 必需尽可能的把包内物质再压一压才能照它设计的做法折上三次左右再扣起来. 如果压的不够或者不能压更多的时候, 那个包口又没有魔术贴可以自封, 在折一次的必然会开口, 在折两次时, 还是有开口的可能性. 这么说可能不直观, 大家可以找一下防水袋子自己试一下, 装到尽可能满, 然后你就明白了. 推荐酱桑能在包口上增加魔术贴封口, 另加两个小扣件可以绑在包边上的压缩绳上, 使得包口可以向两边封闭.<br><img src="/images/gonga/%E5%8C%85%E8%85%B0%E5%B8%A6.JPG" alt="包的腰带"><br>这个包的腰带与背板连接是靠两边的织带. 这种连接设计就会造成一个很明显的问题, 包的整个重量都会放在了两边的织带上, 于是织带的磨损不可避免. 图上这个情况是这个包第一次走线完的情况, 耐久性如何有待进一步的使用后才能知道. 推荐酱桑更改设计, 扩大腰带与背板的连接点数量, 使重量能分布到更多的地方去.<br><img src="/images/gonga/%E5%8C%85%E8%83%8C%E6%9D%BF.JPG" alt="背板"><br>这包最好的东西个人认为就是那块背板了, 在适当的硬度的同时, 又有很好的韧度. 这种外架包最大的问题如<a href="https://mp.weixin.qq.com/s/89dOHpQ5ldZYzVqgMZAQCQ">那些死贵的户外背包，都是啥？</a>这个公众号文章里说的那样子, 外架包因为框架与包体分开会造成行动时包体不稳. 这个问题在这块背板上不存在. 鱼骨型的设计加上碳纤维的韧度, 在用力把两边收缩绳都拉紧, 让背板的鱼骨边有一定的弯曲对包体形成包围后, 三明治的包体与背板仿佛内架包一样能结合的非常紧密, 完全没有没拉紧时晃动不稳的情况, 这时背包有如一体<del>行动如风</del>. 它后面有六块泡沫垫的通风设计, 看着挺简单的, 使用起来确实有用, 在贡嘎时还感觉通风过了头挺冷得.<br><img src="/images/gonga/%E8%85%B0%E5%B8%A6%E5%8C%85.JPG" alt="腰带包"><br>这两腰带包大小挺合适的还防水, 手机放里面下雨也都没事, 不过推荐酱桑把拉链设计成双向的, 这种左右不一样方向在使用上会怪怪的不对称的感觉.</p><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="MSR-Trailshot-Microfilter"><a href="#MSR-Trailshot-Microfilter" class="headerlink" title="MSR Trailshot Microfilter"></a>MSR Trailshot Microfilter</h3><blockquote><p><img src="/images/gonga/msr.png" alt="净水器"></p><p>壮士, 干了这碗牛粪水! 来世还生种花家!</p></blockquote><p>这是我用过最好用的净水器, 除了需要撸之外!<br>我用过国产的单兵净水器<img src="/images/gonga/%E5%9B%BD%E4%BA%A7%E5%8D%95%E5%85%B5%E5%87%80%E6%B0%B4%E5%99%A8.png" alt="国产单兵净水器"><br>美帝的Aquamira Frontier Pro <img src="/images/gonga/Aquamira.png" alt="Aquamira"><br>还有朋友的Sawyer MINI Filter <img src="/images/gonga/%E7%B4%A2%E8%80%B6.png" alt="Sawyer"><br>我要说的是, MSR Trailshot Microfilter 是我用过最好用的净水器. 好用在于它出水量确实是非常大, 大到可以合理使用的地步了, 与上面那些尿滴漏流量妖艳贱货们完全不一样! 这次我全程除了灌保温瓶之外, 没有烧过路途中的饮用水, 完全靠这个净水器直接过滤溪水后装袋饮用. 因其出水量大, 每次包括下下包净水水收包装袋所需时间不过五分钟以内, 到达可以合理使用的范围了. 当然缺点也是有的, 要是要撸撸撸, 一次过滤一升的路途饮用水还好, 过滤超过三升的营地用水就要左手撸完右手撸, 右手撸完双手撸了.</p><h3 id="伏来阳太阳能板"><a href="#伏来阳太阳能板" class="headerlink" title="伏来阳太阳能板"></a>伏来阳太阳能板</h3><blockquote><p><img src="/images/gonga/%E5%A4%AA%E9%98%B3%E8%83%BD%E6%9D%BF.JPG" alt="太阳能板"></p><p>向着太阳奔跑的中老年们!</p></blockquote><p>高原的阳光有多强, 这块板子就有多强. 这板子刚拿到手时, 在南方的多云天表现的非常不好, 于是我在微信上与伏来阳的客服撕逼. 后来端午节出去, 在南方的大太阳下表现不错, 我对它映像改观了不少. 而这次的贡嘎之行, 这板子让我感受到了高原阳光的可怕.<br>它曾经在路餐休息的三十分钟内, 充了iphone6s百分二十以上的电. 直接从百分六十电量变成了百分八十. 它也在营地大晒场的两个多小时内, 将一节全空的3400毫安18650充到满, 然后又充了另一个3400毫安全空的18650到大约快一半. 这表现可以算是惊人, 于是我就把它背背包后面了, 于是我们一路向东而去, 于是尼玛全程晒不到太阳啊! 少年们, 如果你不是一路背着太阳的话, 推荐还是不要背在背包上了, 营地或者中间休息时充一下就很不错了, 路途上实际是充不到什么电的.<br>在这次使用完后, 个人认为在阳光充沛的地方, 太阳能板已经可以达到做作户外电源系统一部分的程度了. 大家综合一下自己要去的路线时间长短, 天气好坏, 阳光充沛程度后考虑是否将太阳能板加入装备列表中.</p><p>** 全文完, 谢谢收看! **</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>贡嘎装备计划</title>
      <link href="/2017/10/02/%E8%B4%A1%E5%98%8E%E8%A3%85%E5%A4%87/"/>
      <url>/2017/10/02/%E8%B4%A1%E5%98%8E%E8%A3%85%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /><col  class="org-right" /></colgroup><thead><tr><th scope="col" class="org-left">类别</th><th scope="col" class="org-left">名称</th><th scope="col" class="org-right">重量</th></tr></thead><tbody><tr><td class="org-left">露营</td><td class="org-left">田野睡袋</td><td class="org-right">872</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">therm-a-rest xlite</td><td class="org-right">357</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">AMK Bivvy (当地布)</td><td class="org-right">101</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">酱铺2人Cuben金字塔(风绳绑在帐篷上)</td><td class="org-right">581</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">钛地钉(17根,含地钉袋)</td><td class="org-right">255</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">充气垫气泵(兼柴火炉鼓风机)</td><td class="org-right">58</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">酱铺三明治(含两个腰包一个肩包)</td><td class="org-right">1010</td></tr></tbody><tbody><tr><td class="org-left">锅炉</td><td class="org-left">柴火炉(兼酒精棉球炉, 含收纳袋)</td><td class="org-right">147</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">1.5升 铝锅(含锡箔锅盖,碳纤锅柄,收纳袋)</td><td class="org-right">105</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">钛筷与钛勺</td><td class="org-right">35</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">Flod-A-Cup 折叠水杯</td><td class="org-right">50</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">2升鸭嘴兽水袋</td><td class="org-right">36</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">1升鸭嘴兽水袋</td><td class="org-right">36</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">膳魔师FEK800</td><td class="org-right">357</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">MSR TrailShot 净水器</td><td class="org-right">150</td></tr></tbody><tbody><tr><td class="org-left">衣服</td><td class="org-left">smartwood 袜子</td><td class="org-right">68</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">outdome羊毛袜子</td><td class="org-right">60</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬速干长裤</td><td class="org-right">320</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">天石羽绒裤</td><td class="org-right">260</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">三峰防雨裙</td><td class="org-right">72</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬羊毛T恤</td><td class="org-right">165</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">老鼠神衣</td><td class="org-right">272</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">始祖鸟冲锋衣</td><td class="org-right">340</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">HW羽绒服</td><td class="org-right">340</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">buff防风头巾</td><td class="org-right">80</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬防风手套</td><td class="org-right">82</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">羽绒脚套</td><td class="org-right">152</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">紧身抓绒内衣</td><td class="org-right">250</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">紧身抓绒裤</td><td class="org-right">195</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">内裤</td><td class="org-right">88</td></tr></tbody><tbody><tr><td class="org-left">电器</td><td class="org-left">伏来阳太阳能板</td><td class="org-right">207</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">18650电池(3个)</td><td class="org-right">141</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">米勒 ML101</td><td class="org-right">33</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">斑马18650头灯(含一个18650电池)</td><td class="org-right">114</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">小米双头充电器</td><td class="org-right">61</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">苹果Lightning线</td><td class="org-right">8</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">garmin充电线</td><td class="org-right">15</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">microUSB线</td><td class="org-right">19</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">iphone6s</td><td class="org-right">152</td></tr></tbody><tbody><tr><td class="org-left">杂项</td><td class="org-left">便便铲</td><td class="org-right">16</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">牙刷 牙膏 毛巾</td><td class="org-right">90</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">太阳镜</td><td class="org-right">32</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">buff太阳帽</td><td class="org-right">30</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">救生哨加打火棒</td><td class="org-right">33</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">garmin forunner 935</td><td class="org-right">50</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">酱铺粗苯收纳袋\*2</td><td class="org-right">18</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">三峰网袋（中号）</td><td class="org-right">13</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">三峰网袋（大号）</td><td class="org-right">17</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">雨伞</td><td class="org-right">195</td></tr></tbody><tbody><tr><td class="org-left">总计</td><td class="org-left">&#xa0;</td><td class="org-right">7266</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>环台装备清单</title>
      <link href="/2017/04/16/%E7%8E%AF%E5%8F%B0%E8%A3%85%E5%A4%87%E6%B8%85%E5%8D%95/"/>
      <url>/2017/04/16/%E7%8E%AF%E5%8F%B0%E8%A3%85%E5%A4%87%E6%B8%85%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>品类</th><th>名字</th><th>数量</th></tr></thead><tbody><tr><td>衣服（数量包括身上）</td><td>速干长裤</td><td>1</td></tr><tr><td></td><td>速干短裤</td><td>2</td></tr><tr><td></td><td>速干内裤</td><td>3</td></tr><tr><td></td><td>袜子</td><td>3</td></tr><tr><td></td><td>皮肤风衣</td><td>1</td></tr><tr><td></td><td>迪卡侬雨衣</td><td>1</td></tr><tr><td></td><td>速干短袖</td><td>2</td></tr><tr><td>修理工具</td><td>撬胎棒</td><td>2</td></tr><tr><td></td><td>截链器</td><td>1</td></tr><tr><td></td><td>魔术扣</td><td>2</td></tr><tr><td></td><td>补胎片</td><td>6</td></tr><tr><td></td><td>内胎</td><td>2</td></tr><tr><td></td><td>外胎</td><td>2</td></tr><tr><td></td><td>集成工具</td><td>1</td></tr><tr><td></td><td>打气桶</td><td>1</td></tr><tr><td></td><td>链条油</td><td>1</td></tr><tr><td>日常用品</td><td>毛巾</td><td>1</td></tr><tr><td></td><td>牙刷牙膏</td><td>1</td></tr><tr><td>电器</td><td>充电头</td><td>1</td></tr><tr><td></td><td>相机</td><td>1</td></tr><tr><td></td><td>18650电池</td><td>4</td></tr><tr><td></td><td>米勒101</td><td>1</td></tr><tr><td></td><td>斑马手电</td><td>1</td></tr><tr><td></td><td>micro-usb线</td><td>2</td></tr><tr><td></td><td>苹果线</td><td>1</td></tr><tr><td></td><td>iwatch线</td><td>1</td></tr><tr><td></td><td>nokia黑白机</td><td>1</td></tr><tr><td></td><td>苹果6s</td><td>1</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 旅行 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
            <tag> 台湾 </tag>
            
            <tag> 自行车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环台路书</title>
      <link href="/2017/04/16/%E7%8E%AF%E5%8F%B0%E8%B7%AF%E4%B9%A6/"/>
      <url>/2017/04/16/%E7%8E%AF%E5%8F%B0%E8%B7%AF%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="台北至新竹-81公里"><a href="#台北至新竹-81公里" class="headerlink" title="台北至新竹 81公里"></a>台北至新竹 81公里</h2><p>台北-三峡-大溪老街-石门-关西-城隍庙-新竹</p><p>台3线-县道118</p><p>景点：新竹城隍庙</p><h2 id="新竹至台中-100公里"><a href="#新竹至台中-100公里" class="headerlink" title="新竹至台中 100公里"></a>新竹至台中 100公里</h2><p>新竹-竹南-后茏-通霄-苑里-大甲-清水-沙鹿-台中</p><p>台61线-台1线-台12线</p><p>景点：</p><p>​    大甲镇澜宫</p><p>​    台中彩虹村</p><p>​    台中逢甲夜市</p><h2 id="台中至嘉义-94-3公里"><a href="#台中至嘉义-94-3公里" class="headerlink" title="台中至嘉义 94.3公里"></a>台中至嘉义 94.3公里</h2><p>台中-彰化-员林-北斗-西螺-斗南-民雄-嘉义</p><p>台1线</p><p>景点：嘉义火鸡肉饭</p><h2 id="嘉义至垦丁"><a href="#嘉义至垦丁" class="headerlink" title="嘉义至垦丁"></a>嘉义至垦丁</h2><p>备用路线：</p><h3 id="去国圣灯塔"><a href="#去国圣灯塔" class="headerlink" title="去国圣灯塔"></a>去国圣灯塔</h3><h4 id="嘉义至台南-95-2公里"><a href="#嘉义至台南-95-2公里" class="headerlink" title="嘉义至台南 95.2公里"></a>嘉义至台南 95.2公里</h4><p>嘉义-国圣港灯塔-台南</p><h4 id="台南至枋寮-86-5公里"><a href="#台南至枋寮-86-5公里" class="headerlink" title="台南至枋寮 86.5公里"></a>台南至枋寮 86.5公里</h4><p>台1</p><h4 id="枋寮至垦丁-59-1公里"><a href="#枋寮至垦丁-59-1公里" class="headerlink" title="枋寮至垦丁 59.1公里"></a>枋寮至垦丁 59.1公里</h4><h3 id="不去国圣灯塔"><a href="#不去国圣灯塔" class="headerlink" title="不去国圣灯塔"></a>不去国圣灯塔</h3><h4 id="嘉义至高雄-115公里"><a href="#嘉义至高雄-115公里" class="headerlink" title="嘉义至高雄 115公里"></a>嘉义至高雄 115公里</h4><p>嘉义-水上-新营-林凤营-隆田-善化-永康-台南-冈山-高雄</p><p>台1线</p><h4 id="高雄至垦丁-104公里"><a href="#高雄至垦丁-104公里" class="headerlink" title="高雄至垦丁 104公里"></a>高雄至垦丁 104公里</h4><p>高雄-小港-东港-佳冬-枋寮-枋山-枫港-车城-恒春-垦丁</p><p>台17线-台1线-台26线</p><h2 id="垦丁至台东-153公里"><a href="#垦丁至台东-153公里" class="headerlink" title="垦丁至台东 153公里"></a>垦丁至台东 153公里</h2><p>备用路线：</p><ol><li>垦丁至旭海 58公里 游玩路线</li><li>旭海至台东 100公里</li></ol><p>台26-县200甲-县199-台9</p><h2 id="台东至玉里-85公里"><a href="#台东至玉里-85公里" class="headerlink" title="台东至玉里 85公里"></a>台东至玉里 85公里</h2><p>台东-初鹿-鹿野-关山-池上-富里-玉里</p><p>台9</p><p>景点：池上便当</p><h2 id="玉里至花莲太鲁阁-113公里"><a href="#玉里至花莲太鲁阁-113公里" class="headerlink" title="玉里至花莲太鲁阁 113公里"></a>玉里至花莲太鲁阁 113公里</h2><p>玉里-瑞穗-富源-光复糖厂-凤林-丰田-志学-吉安-花莲-新城-太鲁阁</p><p>台9</p><p>景点：</p><p>​    瑞穗北回归线</p><p>​    麻糬</p><h2 id="花莲至苏澳-82公里"><a href="#花莲至苏澳-82公里" class="headerlink" title="花莲至苏澳 82公里"></a>花莲至苏澳 82公里</h2><p>台9</p><p>景点：</p><p>​    苏澳冷泉</p><p>​    苏澳羊羹</p><h2 id="苏澳至九份-89-1公里"><a href="#苏澳至九份-89-1公里" class="headerlink" title="苏澳至九份 89.1公里"></a>苏澳至九份 89.1公里</h2><p>苏澳-三貂角灯塔-九份</p><p>​                台2线</p><h2 id="九份至台北-94-5公里"><a href="#九份至台北-94-5公里" class="headerlink" title="九份至台北 94.5公里"></a>九份至台北 94.5公里</h2><p>九份-富贵角灯塔-台北</p><p>台5线</p>]]></content>
      
      
      <categories>
          
          <category> 旅行 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
            <tag> 台湾 </tag>
            
            <tag> 自行车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>危地马拉日晒波旁</title>
      <link href="/2017/03/15/%E5%8D%B1%E5%9C%B0%E9%A9%AC%E6%8B%89%E6%97%A5%E6%99%92%E6%B3%A2%E6%97%81/"/>
      <url>/2017/03/15/%E5%8D%B1%E5%9C%B0%E9%A9%AC%E6%8B%89%E6%97%A5%E6%99%92%E6%B3%A2%E6%97%81/</url>
      
        <content type="html"><![CDATA[<h2 id="大恕家坚果探险队"><a href="#大恕家坚果探险队" class="headerlink" title="大恕家坚果探险队"></a>大恕家坚果探险队</h2><p><img src="/images/cafe/%E5%9D%9A%E6%9E%9C%E6%8E%A2%E9%99%A9%E9%98%9F.JPG" alt="坚果探险队"></p><blockquote><p>传统波旁种，产区：韦韦特南，等级：SHB，海拔：1800-2000</p><p>中浅烘，可能的味道：坚果、榛果、核桃、红果酸甜</p></blockquote><a id="more"></a><h3 id="2017-03-15-14点13"><a href="#2017-03-15-14点13" class="headerlink" title="2017 03 15 14点13"></a>2017 03 15 14点13</h3><p><img src="/images/cafe/201703151413.JPG" alt="坑"></p><table><thead><tr><th>粉量</th><th>水温</th><th>闷蒸时长</th><th>萃取时长</th><th>萃取克数</th><th>研磨度</th></tr></thead><tbody><tr><td>30</td><td>92</td><td>90</td><td>297</td><td>400</td><td>2.5</td></tr></tbody></table><p>​    醇厚度非常好，不涩，无酸，回甘悠长，无苦味。</p>]]></content>
      
      
      <categories>
          
          <category> 咖啡 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>苏门答腊亚齐曼特宁</title>
      <link href="/2017/03/15/%E8%8B%8F%E9%97%A8%E7%AD%94%E8%85%8A%E4%BA%9A%E9%BD%90%E6%9B%BC%E7%89%B9%E5%AE%81/"/>
      <url>/2017/03/15/%E8%8B%8F%E9%97%A8%E7%AD%94%E8%85%8A%E4%BA%9A%E9%BD%90%E6%9B%BC%E7%89%B9%E5%AE%81/</url>
      
        <content type="html"><![CDATA[<h2 id="大恕家愿望收纳箱"><a href="#大恕家愿望收纳箱" class="headerlink" title="大恕家愿望收纳箱"></a>大恕家愿望收纳箱</h2><p><img src="/images/cafe/%E6%84%BF%E6%9C%9B%E6%94%B6%E7%BA%B3%E7%AE%B1.png" alt="愿望收纳箱"></p><blockquote><p>苏门答腊亚齐水洗曼特宁</p><p>帝比卡种， 产地亚齐，海拔1550-1700，处理：水洗，中深烘</p><p>可能尝到的味道：松子香、太妃糖、桑葚</p></blockquote><a id="more"></a><h3 id="2017-03-15-08-57"><a href="#2017-03-15-08-57" class="headerlink" title="2017 03 15 08:57"></a>2017 03 15 08:57</h3><table><thead><tr><th>粉量（克）</th><th>水温</th><th>闷蒸时长</th><th>萃取时长</th><th>萃取克数</th></tr></thead><tbody><tr><td>15</td><td>90</td><td>45</td><td>150</td><td>200</td></tr></tbody></table><p>入口酸香，有麦芽糖的甜味，酸甜震明显，后味甜感悠长。</p><p>温度下降，酸质明显，有紧的感觉，甜感下降，酸甜震减弱，后味有涩感。</p><p>温度再下降，奶油味出现</p><h3 id="2017-03-20-08-59"><a href="#2017-03-20-08-59" class="headerlink" title="2017 03 20 08:59"></a>2017 03 20 08:59</h3><p><img src="/images/cafe/201703200900.JPG" alt="坑"></p><table><thead><tr><th>粉量（克）</th><th>水温</th><th>闷蒸时长</th><th>萃取时长</th><th>萃取克数</th></tr></thead><tbody><tr><td>15</td><td>90</td><td>60</td><td>180</td><td>200</td></tr></tbody></table><p>这次冲的不好喝，杂味过重。没必要用滴滴法，或者是水温太高，可能降到85度再用滴滴会更好，现在这个水温过萃了。</p>]]></content>
      
      
      <categories>
          
          <category> 咖啡 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>哥伦比亚水洗Supremo</title>
      <link href="/2017/03/07/%E5%93%A5%E4%BC%A6%E6%AF%94%E4%BA%9A%E6%B0%B4%E6%B4%97Supremo/"/>
      <url>/2017/03/07/%E5%93%A5%E4%BC%A6%E6%AF%94%E4%BA%9A%E6%B0%B4%E6%B4%97Supremo/</url>
      
        <content type="html"><![CDATA[<h2 id="大恕家麦芽糖串串"><a href="#大恕家麦芽糖串串" class="headerlink" title="大恕家麦芽糖串串"></a>大恕家麦芽糖串串</h2><p><img src="/images/cafe/%E5%A4%A7%E6%81%95%E5%AE%B6%E7%9A%84%E5%93%A5%E4%BC%A6%E6%AF%94%E4%BA%9A%E8%B1%86%E8%A2%8B%E6%AD%A3%E9%9D%A2.png" alt="豆袋下面"></p><blockquote><p>哥伦比亚水洗Supremo</p><p>卡杜拉种，麦德林，海拔1550-1700，中烘</p><p>可能尝到的味道：麦芽糖、蜜饯、杏子</p></blockquote><a id="more"></a><p><img src="/images/cafe/20170307%E5%93%A5%E4%BC%A6%E6%AF%94%E4%BA%9A%E8%B1%86%E5%AD%90.JPG" alt="豆子"></p><h3 id="2017-03-07-下午"><a href="#2017-03-07-下午" class="headerlink" title="2017 03 07 下午"></a>2017 03 07 下午</h3><table><thead><tr><th>粉量（克）</th><th>水温</th><th>闷蒸时长</th><th>萃取时长</th><th>萃取克数</th></tr></thead><tbody><tr><td>30</td><td>89</td><td>60</td><td>180</td><td>450</td></tr></tbody></table><ol><li>萃取水流不稳定，有过大的倾向，味道淡薄</li><li>温度下降后有甜感，味道向好，但依然淡薄，没有主线</li><li>顺滑度随温度下降有所提升</li><li>下次注水稳定度需要提高，拉长萃取时间试试</li></ol><h3 id="2017-03-10-9点05"><a href="#2017-03-10-9点05" class="headerlink" title="2017 03 10 9点05"></a>2017 03 10 9点05</h3><p><img src="/images/cafe/201703100904.png" alt="豆子"></p><table><thead><tr><th>粉量（克）</th><th>水温</th><th>闷蒸时长</th><th>萃取时长</th><th>萃取克数</th><th>研磨度</th></tr></thead><tbody><tr><td>15.2</td><td>90</td><td>40</td><td>144</td><td>222</td><td>海勒101 3圈</td></tr></tbody></table><p>09:17 酸度明显，醇厚不足，顺滑不足</p><p>09:24 想是在喝一杯开水</p><p>09:48 甜感明显，回味中有涩口的感觉</p><h3 id="2017-03-16-08-48"><a href="#2017-03-16-08-48" class="headerlink" title="2017 03 16 08:48"></a>2017 03 16 08:48</h3><table><thead><tr><th>粉量</th><th>水温</th><th>闷蒸时长</th><th>萃取时间</th><th>萃取克数</th><th>研磨度</th></tr></thead><tbody><tr><td>15</td><td>90</td><td>45</td><td>120</td><td>200</td><td>3</td></tr></tbody></table><p>0849 酸度明显，有酸甜震，顺滑，后味不长。</p><p>0853 有李干的酸香</p>]]></content>
      
      
      <categories>
          
          <category> 咖啡 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>新几内亚水洗AA</title>
      <link href="/2017/03/06/%E6%96%B0%E5%87%A0%E5%86%85%E4%BA%9A%E6%B0%B4%E6%B4%97AA/"/>
      <url>/2017/03/06/%E6%96%B0%E5%87%A0%E5%86%85%E4%BA%9A%E6%B0%B4%E6%B4%97AA/</url>
      
        <content type="html"><![CDATA[<h2 id="大恕家船长与赞美诗"><a href="#大恕家船长与赞美诗" class="headerlink" title="大恕家船长与赞美诗"></a>大恕家船长与赞美诗</h2><p><img src="/images/cafe/%E5%A4%A7%E6%81%95%E5%AE%B6%E7%9A%84%E6%96%B0%E5%87%A0%E5%86%85%E4%BA%9A%E8%B1%86%E8%A2%8B%E6%AD%A3%E9%9D%A2.png" alt="豆袋正面"></p><blockquote><p>新几内亚水洗AA</p><p>帝皮卡种，谷地，海拔1600-1800，重烘</p><p>可能尝到的味道：香草、豆蔻、苹果酒</p></blockquote><a id="more"></a><p><img src="/images/cafe/20170306%E8%B1%86%E5%AD%90.jpg" alt="豆子"></p><h3 id="2017-03-07-上午"><a href="#2017-03-07-上午" class="headerlink" title="2017 03 07 上午"></a>2017 03 07 上午</h3><p><img src="/images/cafe/20170307%E4%B8%8A.JPG" alt="坑"></p><table><thead><tr><th>粉量(克)</th><th>水温</th><th>闷蒸时长</th><th>萃取时长</th><th>萃取克数</th></tr></thead><tbody><tr><td>15</td><td>89</td><td>45</td><td>140</td><td>220</td></tr></tbody></table><ol><li>在高温的情况下，有明显的甜感，温度下降后，甜感消失。味道层次没有，苦味也不明显，同时没有涩味与酸味，味谱平淡。</li><li>醇厚度一般，应该是萃取水量太多，应当减少萃取克数到200左右可以尝试。</li><li>萃取水量减少后，顺滑度应当会有提升，可尝试证实。</li></ol><h3 id="2017-03-08-上午"><a href="#2017-03-08-上午" class="headerlink" title="2017 03 08 上午"></a>2017 03 08 上午</h3><blockquote><p>研磨度：海勒101 4圈</p></blockquote><table><thead><tr><th>粉量（克）</th><th>水温</th><th>闷蒸时长</th><th>萃取时长</th><th>萃取克数</th></tr></thead><tbody><tr><td>15</td><td>94</td><td>25</td><td>120</td><td>200</td></tr></tbody></table><ol><li>高温有明显甜感，同时层次出现，烟感，无酸无涩，顺滑度中等，可能是因为感冒，味谱还是很平。</li><li>焦味下降明显</li><li>温度下降至适口后，入口有香草冰激淋的香草味与奶油味</li><li>苦味与焦味消失，但吞咽时还有油味</li><li>温度下降，甜感上升，顺滑度也在上升</li></ol><h3 id="2017-03-08-下午"><a href="#2017-03-08-下午" class="headerlink" title="2017 03 08 下午"></a>2017 03 08 下午</h3><p><img src="/images/cafe/20170308%E4%B8%8B%E5%8D%88.png" alt="粉"></p><table><thead><tr><th>粉量</th><th>水温</th><th>闷蒸时长</th><th>萃取时长</th><th>萃取克数</th><th>研磨度</th></tr></thead><tbody><tr><td>30</td><td>94</td><td>60</td><td>180</td><td>400</td><td>101 4圈</td></tr></tbody></table><blockquote><p>05:54 顺滑，回甘，回味时间60秒以上</p><p>08:47 苦味明显，有焦味，回甘非常明显，Body厚</p><p>11:15 无变化</p><p>16:00 焦味消失，回甘快速，无明显苦味</p><p>36:48 顺滑感提升，回甘明显，甜感消失</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 咖啡 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>山之屋烤鸡胸土豆泥</title>
      <link href="/2016/09/04/%E5%B1%B1%E4%B9%8B%E5%B1%8B%E7%83%A4%E9%B8%A1%E8%83%B8%E5%9C%9F%E8%B1%86%E6%B3%A5/"/>
      <url>/2016/09/04/%E5%B1%B1%E4%B9%8B%E5%B1%8B%E7%83%A4%E9%B8%A1%E8%83%B8%E5%9C%9F%E8%B1%86%E6%B3%A5/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/mh1/full.jpg" alt="本体"><br>非常的饱，鸡胸一如既往的没有味道。</p>]]></content>
      
      
      <categories>
          
          <category> 户外 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何在android方便的修改字体</title>
      <link href="/2015/05/17/%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%AE%89%E5%8D%93%E5%AD%97%E4%BD%93/"/>
      <url>/2015/05/17/%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%AE%89%E5%8D%93%E5%AD%97%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<p>android并没有提供一个一致性的统一的修改某个程序缺省字体的地方，于是网络上的方法：</p><ol><li>在某个activity上得到所有要修改字体的控件，然后一个个的去修改。</li><li>自己实现所有要修改字体的控件的基础类，在这个类上去指定字体。</li><li>实现一个枚举方法，把activity上所有的控件列出，然后自动设置它们的字体。</li></ol><p>这三个方法第一个实在太不体现智能了。而第二个是基本是在做死。第三个不错，我一开始也是使用这个方法的。但在实际使用中遇到了如果动态生成的控件，比如listview中由adapter生成的控件是无法在一开始就被枚举到，于是也就无法修改字体。如果放到onDraw里，是很不现实的会严重影响性能。如果放到adapter中的话，就与第一种或第二种没什么不同了，总不能每一个adapter都给个这个函数吧？如果自己生成一个BaseAdapter的话，那不其它类型的adapter就不能用了。</p><a id="more"></a><p>其实有一个问题与修改字体这个问题很像，那就是如何修改菜单的样式。在网络上提供的都差不多，比如<a href="http://blog.csdn.net/sodino/article/details/6165132">如下网页</a>中的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">MenuAct.<span class="keyword">this</span>.getLayoutInflater().setFactory(<span class="keyword">new</span> android.view.LayoutInflater.Factory() &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* name - Tag name to be inflated.&lt;br/&gt;</span></span><br><span class="line"><span class="comment">* context - The context the view is being created in.&lt;br/&gt;</span></span><br><span class="line"><span class="comment">* attrs - Inflation attributes as specified in XML file.&lt;br/&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(String name, Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 指定自定义inflate的对象</span></span><br><span class="line"><span class="keyword">if</span> (name.equalsIgnoreCase(<span class="string">&quot;com.android.internal.view.menu.IconMenuItemView&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">LayoutInflater f = getLayoutInflater();</span><br><span class="line"><span class="keyword">final</span> View view = f.createView(name, <span class="keyword">null</span>, attrs);</span><br><span class="line"><span class="keyword">new</span> Handler().post(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 设置背景图片</span></span><br><span class="line">view.setBackgroundResource(R.drawable.menu_background);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> view;</span><br><span class="line">&#125; <span class="keyword">catch</span> (InflateException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这段代码说明，其实用于创建view的inflater是可以被重写厂方法的。而创建view时，无非是从getSystemService(Context.LAYOUT_INFLATER_SERVICE)或者context中得到inflater来创建view。所以如果你的项目是从某个自定义的BaseActivity上来的话，那么只要在这里修改inflater的厂方法就能修改这个activity下所有建立view的方法了，不但包括Fragment，listview这种直接的view，还包括adapter上动态创建的view。</p><p>我现在所在的项目也是这样一个基于自定义的BaseActivity上的项目，所以可以方便的直接在BaseActivity的onCreate函数上写上这个方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    LayoutInflater inflater = (LayoutInflater) <span class="keyword">this</span>.getSystemService(Context.LAYOUT_INFLATER_SERVICE);</span><br><span class="line">    Factory oldFactory = inflater.getFactory();</span><br><span class="line">    Factory2 oldFactory2 = inflater.getFactory2();</span><br><span class="line">    <span class="keyword">if</span> (!(oldFactory <span class="keyword">instanceof</span> CustomInflaterFactory)) &#123;</span><br><span class="line">        CustomInflaterFactory factory = <span class="keyword">new</span> CustomInflaterFactory(oldFactory, oldFactory2);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Field field = LayoutInflater.class.getDeclaredField(&quot;mFactory&quot;);</span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            field.set(inflater, <span class="keyword">null</span>);</span><br><span class="line">            field = LayoutInflater.class.getDeclaredField(&quot;mFactory2&quot;);</span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            field.set(inflater, <span class="keyword">null</span>);</span><br><span class="line">            field = LayoutInflater.class.getDeclaredField(&quot;mFactorySet&quot;);</span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            field.setBoolean(inflater, <span class="keyword">false</span>);</span><br><span class="line">            inflater.setFactory(factory);</span><br><span class="line">            field.setBoolean(inflater, <span class="keyword">false</span>);</span><br><span class="line">            inflater.setFactory2(factory);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException | IllegalAccessException | IllegalArgumentException e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Util.typefaceReplacer(findViewById(android.R.id.content));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相应的CustomInflaterFactory为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomInflaterFactory</span> <span class="keyword">implements</span> <span class="title">Factory</span>, <span class="title">Factory2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Factory old;</span><br><span class="line"><span class="keyword">private</span> Factory2 old2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CustomInflaterFactory</span><span class="params">(Factory old, Factory2 old2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.old = old;</span><br><span class="line">    <span class="keyword">this</span>.old2 = old2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(String name, Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">    LayoutInflater inflater = LayoutInflater.from(context);</span><br><span class="line">    View view = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        view = inflater.createView(name, <span class="keyword">null</span>, attrs);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException | InflateException e) &#123;</span><br><span class="line">        view = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (view == <span class="keyword">null</span> &amp;&amp; old != <span class="keyword">null</span>) view = old.onCreateView(name, context, attrs);</span><br><span class="line">    <span class="keyword">if</span> (view != <span class="keyword">null</span>) Util.typefaceReplacer(view);</span><br><span class="line">    <span class="keyword">if</span> (name.equalsIgnoreCase(<span class="string">&quot;android.support.v7.internal.view.menu.ActionMenuItemView&quot;</span>)) ((TextView) view).setTextSize(<span class="number">16</span>);</span><br><span class="line">    <span class="keyword">return</span> view;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(View parent, String name, Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (old2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    View view = old2.onCreateView(parent, name, context, attrs);</span><br><span class="line">    <span class="keyword">if</span> (view != <span class="keyword">null</span>) Util.typefaceReplacer(view);</span><br><span class="line">    <span class="keyword">return</span> view;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的Util.typefaceReplacer为递归的修改某个viewgroup的字体的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">typefaceReplacer</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (view <span class="keyword">instanceof</span> ViewGroup) &#123;</span><br><span class="line">        ViewGroup vg = (ViewGroup) view;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; vg.getChildCount(); i++) &#123;</span><br><span class="line">            typefaceReplacer(vg.getChildAt(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Method setTypefaceMethod = getMethod(view.getClass(), <span class="string">&quot;setTypeface&quot;</span>, Typeface.class);</span><br><span class="line">    <span class="keyword">if</span> (setTypefaceMethod != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            setTypefaceMethod.invoke(view, getCustomFont());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Method <span class="title">getMethod</span><span class="params">(Class clazz, String name, Class&lt;?&gt;... params)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (clazz == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    Method method = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        method = clazz.getDeclaredMethod(name, params);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">        method = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (method == <span class="keyword">null</span>) &#123;</span><br><span class="line">        method = getMethod(clazz.getSuperclass(), name, params);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> method;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过找到所有有typeface方法的view，把它们的typeface设置为getCustomFont的自定义字体就可以省去判断哪些view要设置字体的问题了。现在说一下为什么在BaseActivty的onCreate中设置了自定义的inflater厂类后，还要再次调用typefaceReplacer这事情，这是因为我暂时还不知道的原因，对于第一个建立起来的Activity，它的第一个TextView会出现classLoader not found这种问题，从而对于这个TextView会因 if (view != null) Util.typefaceReplacer(view) 判断为null而无法替换字体。</p><p>第一次用markdown，还是挺好用的嘛。</p>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在android上判断是否有相机与录音的权限</title>
      <link href="/2015/05/17/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%AE%89%E5%8D%93%E4%B8%8A%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%9C%89%E7%9B%B8%E6%9C%BA%E4%B8%8E%E5%BD%95%E9%9F%B3%E7%9A%84%E6%9D%83%E9%99%90/"/>
      <url>/2015/05/17/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%AE%89%E5%8D%93%E4%B8%8A%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%9C%89%E7%9B%B8%E6%9C%BA%E4%B8%8E%E5%BD%95%E9%9F%B3%E7%9A%84%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<p>Android本身有提供<code>checkPermission(String, String)</code>这一系列的函数来检查某个程序是否有某个权限。但这系列数实际上是在检查AndroidManifest里那<code>user-permission</code>里是否写上了某个权限。大家都知道，这根本行不通，因为安装时那些权限根本没地方让用户部分接受。用户要么全接受一个普通的程序居然有定位读通讯录删除短信这种权限，要么就完全的不能装这个程序了。在一些android机子上，比如华为，会有权限管理这一项。里面可以将程序的一些权限关掉，比如定位、读通讯录、相机还有录音之类的。这个设置就无法通过<code>checkPermission(String, String)</code>这一系列的函数来得到正确的结果了。</p><a id="more"></a><p>本人在项目中还没有用到通讯录权限，但有用到相机与录音，于是本文就集中于相机与录音的权限判断上了。其实代码很简单，具体做法就是在实际操作前先操作一遍录音与相机，看是否能得到结果，如果不能就说明对应的权限没有开放，以下为代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasPermission</span><span class="params">(String permission)</span> </span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (permission) &#123;</span><br><span class="line"><span class="keyword">case</span> Manifest.permission.CAMERA:</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="comment">//实际测试说明如果关闭了相机权限，在camera.open的时候会返回RuntimeException</span></span><br><span class="line">Camera camera = Camera.open();</span><br><span class="line">camera.release();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (RuntimeException e) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> Manifest.permission.RECORD_AUDIO:</span><br><span class="line">MediaRecorder recorder = <span class="keyword">new</span> MediaRecorder();</span><br><span class="line">recorder.reset();</span><br><span class="line">recorder.setAudioSource(MediaRecorder.AudioSource.MIC);</span><br><span class="line">recorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);</span><br><span class="line">recorder.setAudioEncoder(MediaRecorder.AudioEncoder.AAC);</span><br><span class="line">String file = Dict.FILE_PATH.USER_CHAT + SysUtils.getRandomString() + <span class="string">&quot;.aac&quot;</span>;</span><br><span class="line">recorder.setOutputFile(file);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">recorder.prepare();</span><br><span class="line">recorder.start();</span><br><span class="line">File soundFile = <span class="keyword">new</span> File(file);</span><br><span class="line">               <span class="comment">//实际测试说明如果关闭了录音权限，因为无法得到数据流，就不会建立对应的输出文件</span></span><br><span class="line"><span class="keyword">return</span> soundFile.exists();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IllegalStateException | IOException e) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">recorder.stop();</span><br><span class="line">recorder.release();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> getApplication().getPackageManager().checkPermission(permission, MedicalApp.getInstance().getPackageName()) == PackageManager.PERMISSION_GRANTED;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就只实现了相机与录音两个权限的判断，其它的判断等到要使用时再更新。</p>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>装备清单</title>
      <link href="/2015/05/17/%E8%A3%85%E5%A4%87%E6%B8%85%E5%8D%95/"/>
      <url>/2015/05/17/%E8%A3%85%E5%A4%87%E6%B8%85%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>类别</th><th>名称</th><th>重量</th></tr></thead><tbody><tr><td>锅</td><td>MSR 1.7升锅</td><td>304</td></tr><tr><td></td><td>MSR 2.5升锅</td><td>430</td></tr><tr><td></td><td>火枫 集热锅</td><td>205</td></tr><tr><td></td><td>铝水壶</td><td>147</td></tr><tr><td></td><td>1升铝锅</td><td>53</td></tr><tr><td></td><td>1.5升 铝锅</td><td>82</td></tr><tr><td></td><td>2升 铝锅</td><td>101</td></tr><tr><td></td><td>3升 铝锅</td><td>152</td></tr><tr><td></td><td>小煎盘</td><td>69</td></tr><tr><td></td><td>大煎盘</td><td>115</td></tr><tr><td></td><td>钛锅把</td><td>24</td></tr><tr><td></td><td>铝锅把</td><td>38</td></tr><tr><td></td><td>锡箔锅盖</td><td>5</td></tr><tr><td></td><td>铝锅把（亮面）</td><td>44</td></tr><tr><td></td><td></td><td></td></tr><tr><td>炉头</td><td>MSR 炉头</td><td>177</td></tr><tr><td></td><td>火枫 大黄蜂</td><td>48</td></tr><tr><td></td><td>长罐转换头</td><td>30</td></tr><tr><td></td><td>火枫 光芒分体锅头</td><td>280</td></tr><tr><td></td><td>三头酒精炉</td><td>70</td></tr><tr><td></td><td>树哥双层柴火炉</td><td></td></tr><tr><td></td><td>树哥双层酒精炉加炉架</td><td></td></tr><tr><td></td><td>钛柴火炉</td><td>123</td></tr><tr><td></td><td>钛柴火炉酒精棉球支架（两根）</td><td>16</td></tr><tr><td></td><td>Tiji钛双层柴火炉</td><td>147</td></tr><tr><td></td><td>FOX 折叠锯子</td><td>161</td></tr><tr><td></td><td>金属棉球酒精垫</td><td>5</td></tr><tr><td></td><td>树哥皇冠酒精棉球炉</td><td>11</td></tr><tr><td></td><td>气罐架</td><td>20</td></tr><tr><td></td><td>木棉球酒精垫</td><td>13</td></tr><tr><td></td><td>小姜手作酒精炉</td><td>14.2</td></tr><tr><td></td><td>bushbuddy柴火炉</td><td>181</td></tr><tr><td></td><td></td><td></td></tr><tr><td>水具</td><td>MSR4升水袋</td><td>166</td></tr><tr><td></td><td>膳魔师FEK800</td><td>355</td></tr><tr><td></td><td>虎牌 480</td><td>193</td></tr><tr><td></td><td>鸭嘴兽1升水袋（奶头盖子）</td><td>35</td></tr><tr><td></td><td>鸭嘴兽1升水袋（普通盖子）</td><td>25</td></tr><tr><td></td><td>鸭嘴兽2升水袋</td><td>35</td></tr><tr><td></td><td>红酒水袋</td><td>50</td></tr><tr><td></td><td>鸭嘴兽水袋管</td><td>77</td></tr><tr><td></td><td>FlodACup 折叠水杯</td><td>50</td></tr><tr><td></td><td></td><td></td></tr><tr><td>睡觉的家伙</td><td>HW LCW300 睡袋</td><td>512</td></tr><tr><td></td><td>田野热核 充绒650 睡袋</td><td>872</td></tr><tr><td></td><td>冰焰 充绒500 睡袋</td><td>815</td></tr><tr><td></td><td>TAR XLITE 充气垫</td><td>353</td></tr><tr><td></td><td>TAR 银搓</td><td>215</td></tr><tr><td></td><td>山之泉蛋槽</td><td>189</td></tr><tr><td></td><td>迪卡侬瑜珈垫</td><td>88</td></tr><tr><td></td><td>SEATTOSUMMIT Nano 蚊帐</td><td>95</td></tr><tr><td></td><td>AR气泵</td><td>84</td></tr><tr><td></td><td>NodWand气泵</td><td>58</td></tr><tr><td></td><td>酱铺2人cuben金字塔</td><td>581</td></tr><tr><td></td><td>懒猫五方塔</td><td>566</td></tr><tr><td></td><td>AMK 救生毯</td><td>82</td></tr><tr><td></td><td>AMK Bivvy</td><td>101</td></tr><tr><td></td><td>钛地钉（长）</td><td>15</td></tr><tr><td></td><td>迪卡侬方钉</td><td>11</td></tr><tr><td></td><td>酱铺发泡垫</td><td>224</td></tr><tr><td></td><td>钛空心地丁</td><td>8.8</td></tr><tr><td></td><td></td><td></td></tr><tr><td>背包</td><td>花岗岩 烈火</td><td>1350</td></tr><tr><td></td><td>花岗岩 晴朗</td><td>1030</td></tr><tr><td></td><td>ULA EPIC</td><td>1052</td></tr><tr><td></td><td>SEATOSUMMIT 35升大河防水袋</td><td>237</td></tr><tr><td></td><td>SEATOSUMMIT 60升大河防水袋</td><td>316</td></tr><tr><td></td><td>多特水壶腰包</td><td>174</td></tr><tr><td></td><td>收线夹</td><td>7</td></tr><tr><td></td><td>胸扣</td><td>9</td></tr><tr><td></td><td>MOLLE扣</td><td>7</td></tr><tr><td></td><td>翔野MOLLE小腰带包</td><td>99</td></tr><tr><td></td><td>翔野MOLLE大腰带包</td><td>174</td></tr><tr><td></td><td>翔野MOLLE水壶包</td><td>113</td></tr><tr><td></td><td>强氧魔怪</td><td>105</td></tr><tr><td></td><td>强氧色包MINI</td><td>251</td></tr><tr><td></td><td>酱铺三明治(含两个腰包一个肩包)</td><td>1010</td></tr><tr><td></td><td></td><td></td></tr><tr><td>电器</td><td>米勒 ML102</td><td>33</td></tr><tr><td></td><td>米勒 ML202</td><td>60</td></tr><tr><td></td><td>18650电池</td><td>47</td></tr><tr><td></td><td>长天 M1200E</td><td>27</td></tr><tr><td></td><td>长天 M241A</td><td>40</td></tr><tr><td></td><td>MOTO DEFY 导航用</td><td>114</td></tr><tr><td></td><td>华为荣耀3C</td><td>137</td></tr><tr><td></td><td>品胜电霸1000</td><td>300</td></tr><tr><td></td><td>曼福图三角架</td><td>162</td></tr><tr><td></td><td>索尼Alpha5000</td><td>414</td></tr><tr><td></td><td>小米两万毫安充电宝</td><td>321</td></tr><tr><td></td><td>伏来阳太阳能板</td><td>207</td></tr><tr><td></td><td>NOKIA 1210 黑白机</td><td>76</td></tr><tr><td></td><td>小米双头充电器</td><td>61</td></tr><tr><td></td><td>garmin forunner 935</td><td>50</td></tr><tr><td></td><td>华为充电5V1A</td><td>28</td></tr><tr><td></td><td>短苹果线</td><td>8</td></tr><tr><td></td><td>iPhone11</td><td>211</td></tr><tr><td></td><td>紫米Type-C充电线+Lightning转接头</td><td>30</td></tr><tr><td></td><td>Apple Watch充电器</td><td>24</td></tr><tr><td></td><td></td><td></td></tr><tr><td>衣服</td><td>cloudveil 防风抓绒</td><td>341</td></tr><tr><td></td><td>迪卡侬羊毛T恤</td><td>163</td></tr><tr><td></td><td>迪卡侬普通T性</td><td>127</td></tr><tr><td></td><td>迪卡侬绒里长袖</td><td>263</td></tr><tr><td></td><td>迪卡侬速干长袖</td><td>186</td></tr><tr><td></td><td>迪卡侬49抓绒</td><td>293</td></tr><tr><td></td><td>迪卡侬速干短裤</td><td>229</td></tr><tr><td></td><td>迪卡侬速干长裤</td><td>322</td></tr><tr><td></td><td>迪卡侬七分裤</td><td>134</td></tr><tr><td></td><td>迪卡侬紧身绒裤</td><td>195</td></tr><tr><td></td><td>迪卡侬抓绒裤</td><td>165</td></tr><tr><td></td><td>迪卡侬防风手套</td><td>82</td></tr><tr><td></td><td>迪卡侬空顶帽</td><td>41</td></tr><tr><td></td><td>IB羊毛袜子</td><td>73</td></tr><tr><td></td><td>outdome羊毛袜子</td><td>60</td></tr><tr><td></td><td>羊毛帽子</td><td>78</td></tr><tr><td></td><td>buff windstopper头巾</td><td>79</td></tr><tr><td></td><td>始祖鸟帽</td><td>64</td></tr><tr><td></td><td>带帽檐头巾</td><td>59</td></tr><tr><td></td><td>smartwood 袜子</td><td>68</td></tr><tr><td></td><td>始祖鸟冲锋衣</td><td>400</td></tr><tr><td></td><td>黑冰羽绒脚套</td><td>155</td></tr><tr><td></td><td>暖宝宝手套</td><td>36</td></tr><tr><td></td><td>HW羽绒短袖</td><td>230</td></tr><tr><td></td><td>天石羽绒裤</td><td>258</td></tr><tr><td></td><td>HW羽绒服</td><td>335</td></tr><tr><td></td><td>迪卡侬皮肤风衣</td><td>99</td></tr><tr><td></td><td>buff太阳帽</td><td>30</td></tr><tr><td></td><td>老鼠神衣</td><td>272</td></tr><tr><td></td><td>三峰裙子</td><td>72</td></tr><tr><td></td><td>冲锋裤</td><td>268</td></tr><tr><td></td><td></td><td></td></tr><tr><td>鞋子</td><td>510</td><td>914</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td>杂项</td><td>救生哨加打火棒</td><td>33</td></tr><tr><td></td><td>手表加指南针</td><td>46</td></tr><tr><td></td><td>MSR 毛巾</td><td>41</td></tr><tr><td></td><td>PATAGONIA 腰带</td><td>132</td></tr><tr><td></td><td>安全头盔</td><td>330</td></tr><tr><td></td><td>折叠碗</td><td>49</td></tr><tr><td></td><td>HW小椅子</td><td>368</td></tr><tr><td></td><td>汽灯</td><td>151</td></tr><tr><td></td><td>HWB膑骨加压带</td><td>54</td></tr><tr><td></td><td>超轻毛巾</td><td>6</td></tr><tr><td></td><td>便便铲</td><td>16</td></tr><tr><td></td><td>防沙套</td><td>40</td></tr><tr><td></td><td></td><td></td></tr><tr><td>防水&amp;收纳袋</td><td>TPU中号防水袋</td><td>34</td></tr><tr><td></td><td>TPU大号防水袋</td><td>67</td></tr><tr><td></td><td>花岗岩粗苯防水袋18升</td><td>24</td></tr><tr><td></td><td>酱铺粗苯收纳袋</td><td>9</td></tr><tr><td></td><td>SEATOSUMMIT EVENT防水袋</td><td>89</td></tr><tr><td></td><td>HW防水袋</td><td>47</td></tr><tr><td></td><td>蜂鸟6升防水袋</td><td>44</td></tr><tr><td></td><td>三峰收纳袋（中号）</td><td>27</td></tr><tr><td></td><td>三峰收纳袋（小号）</td><td>16</td></tr><tr><td></td><td>三峰收纳袋（大号）</td><td>36</td></tr><tr><td></td><td>三峰网袋（小号）</td><td>8</td></tr><tr><td></td><td>三峰网袋（中号）</td><td>13</td></tr><tr><td></td><td>三峰网袋（大号）</td><td>17</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 户外 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 户外 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鳌太UL清单</title>
      <link href="/2015/05/17/%E9%B3%8C%E5%A4%AAUL%E6%B8%85%E5%8D%95/"/>
      <url>/2015/05/17/%E9%B3%8C%E5%A4%AAUL%E6%B8%85%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /><col  class="org-right" /></colgroup><thead><tr><th scope="col" class="org-left">类别</th><th scope="col" class="org-left">名称</th><th scope="col" class="org-right">重量</th></tr></thead><tbody><tr><td class="org-left">&#xa0;</td><td class="org-left">1.5升 铝锅</td><td class="org-right">82</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">钛锅把</td><td class="org-right">24</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">锡箔锅盖</td><td class="org-right">5</td></tr></tbody><tbody><tr><td class="org-left">&#xa0;</td><td class="org-left">树哥皇冠酒精棉球炉</td><td class="org-right">11</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">木棉球酒精垫</td><td class="org-right">13</td></tr></tbody><tbody><tr><td class="org-left">&#xa0;</td><td class="org-left">膳魔师FEK800</td><td class="org-right">355</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">鸭嘴兽1升水袋（奶头盖子）</td><td class="org-right">35</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">鸭嘴兽2升水袋</td><td class="org-right">35</td></tr></tbody><tbody><tr><td class="org-left">&#xa0;</td><td class="org-left">冰焰 充绒500 睡袋</td><td class="org-right">815</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">TAR 银搓</td><td class="org-right">215</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬瑜珈垫</td><td class="org-right">88</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">懒猫五方塔</td><td class="org-right">566</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">救生毯</td><td class="org-right">82</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">钛地钉（长）</td><td class="org-right">90</td></tr></tbody><tbody><tr><td class="org-left">&#xa0;</td><td class="org-left">ULA EPIC</td><td class="org-right">1052</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">SEATOSUMMIT 60升大河防水袋</td><td class="org-right">316</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">强氧魔怪</td><td class="org-right">105</td></tr></tbody><tbody><tr><td class="org-left">电器</td><td class="org-left">米勒 ML102</td><td class="org-right">34</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">18650电池</td><td class="org-right">188</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">长天 M1200E</td><td class="org-right">27</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">索尼Alpha5000</td><td class="org-right">414</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">NOKIA 1210 黑白机</td><td class="org-right">76</td></tr></tbody><tbody><tr><td class="org-left">衣服</td><td class="org-left">cloudveil 防风抓绒</td><td class="org-right">341</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬速干短裤</td><td class="org-right">229</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬防风手套</td><td class="org-right">82</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">outdome羊毛袜子</td><td class="org-right">60</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">羊毛帽子</td><td class="org-right">78</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">smartwood 袜子</td><td class="org-right">68</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">始祖鸟冲锋衣</td><td class="org-right">400</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">黑冰羽绒脚套</td><td class="org-right">155</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">天石羽绒裤</td><td class="org-right">258</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">HW羽绒服</td><td class="org-right">335</td></tr></tbody><tbody><tr><td class="org-left">杂项</td><td class="org-left">救生哨加打火棒</td><td class="org-right">33</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">手表加指南针</td><td class="org-right">46</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">MSR 毛巾</td><td class="org-right">41</td></tr></tbody><tbody><tr><td class="org-left">&#xa0;</td><td class="org-left">花岗岩粗苯防水袋18升</td><td class="org-right">48</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">酱铺粗苯收纳袋</td><td class="org-right">9</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">三峰网袋（中号）</td><td class="org-right">13</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">三峰网袋（大号）</td><td class="org-right">17</td></tr></tbody><tbody><tr><td class="org-left">6841</td><td class="org-left">6841</td><td class="org-right">6841</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 户外 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 户外 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>食物参考</title>
      <link href="/2015/05/17/%E9%A3%9F%E7%89%A9%E5%8F%82%E8%80%83/"/>
      <url>/2015/05/17/%E9%A3%9F%E7%89%A9%E5%8F%82%E8%80%83/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>食物名称</th><th>口感</th><th>重量</th></tr></thead><tbody><tr><td>科尔沁风干牛肉（原味）</td><td>口感不错，香脆。但有点过咸，当路粮吃可以，当配菜不行。当路粮吃时会有大量饮水的问题</td><td></td></tr><tr><td>宝矿力水特冲剂</td><td>口感不错，与成品水一样，很清爽</td><td></td></tr><tr><td>NUUN可乐味</td><td>真是难喝到奇皅</td><td></td></tr><tr><td>H5ZERO柚子味</td><td>真是不错，可以再喝</td><td></td></tr><tr><td>牛肉泡馍</td><td>酱包放一半味道非常好，吃不太饱，要配其它主食</td><td>178</td></tr><tr><td>糊辣汤</td><td>一小包可以泡一升这种子，可以吃饱的感觉。可加紫菜豆腐</td><td>90</td></tr><tr><td>士力架</td><td>天冷时很好吃</td><td></td></tr><tr><td>羊肉泡馍</td><td>酱包放一半</td><td>192</td></tr><tr><td>千石谷熟化米</td><td>真的是非常难吃的东西，以后不要买了</td><td>124</td></tr><tr><td>各种意大利面</td><td>分量很足，但太费火了，不合适重装户外，一两日吃吃可以</td><td></td></tr><tr><td>维维嚼益嚼（苹果味）</td><td>味道不错，有苹果的味道，口感与果条很像</td><td></td></tr><tr><td>维维嚼益嚼（芒果椰子）</td><td>有很浓的芒果味道，椰子味道没吃出来</td><td></td></tr><tr><td>维维嚼益嚼（红枣）</td><td>枣味非常浓，很像月饼</td><td></td></tr><tr><td>维维嚼益嚼（葡萄干）</td><td>味道不好吃，相对其它口味来说味道有点惨</td><td></td></tr><tr><td>维维嚼益嚼（山楂）</td><td>味道好像红枣</td><td></td></tr><tr><td>KOKA 原味鸡汤面</td><td>味道很清爽，鸡汤味很好，吃过不会口干</td><td></td></tr><tr><td>7COIN 泰式冬荫功风味</td><td>很浓的柠檬酸味，口味有点重，一点点的辣</td><td></td></tr><tr><td>喜达（sedoop）捞面原味</td><td>原味就是一种冬荫功的感觉，不过捞面看着美好，户外做起来要准备两个碗也是麻烦了点。</td><td></td></tr><tr><td>尾西</td><td>来自日本,于是很合适中国人的口味,比较清淡,就是份量不太足</td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 户外 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 户外 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鳌太装备清单</title>
      <link href="/2015/05/17/%E9%B3%8C%E5%A4%AA%E8%A3%85%E5%A4%87%E6%B8%85%E5%8D%95/"/>
      <url>/2015/05/17/%E9%B3%8C%E5%A4%AA%E8%A3%85%E5%A4%87%E6%B8%85%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /><col  class="org-right" /></colgroup><thead><tr><th scope="col" class="org-left">类别</th><th scope="col" class="org-left">名称</th><th scope="col" class="org-right">重量</th></tr></thead><tbody><tr><td class="org-left">锅</td><td class="org-left">MSR 1.7升锅</td><td class="org-right">304</td></tr></tbody><tbody><tr><td class="org-left">炉头</td><td class="org-left">MSR 炉头</td><td class="org-right">177</td></tr></tbody><tbody><tr><td class="org-left">水具</td><td class="org-left">膳魔师FEK800</td><td class="org-right">355</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">鸭嘴兽1升水袋（奶头盖子）</td><td class="org-right">35</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">鸭嘴兽2升水袋</td><td class="org-right">35</td></tr></tbody><tbody><tr><td class="org-left">睡袋的家伙</td><td class="org-left">冰焰 充绒500 睡袋</td><td class="org-right">815</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">TAR 银搓</td><td class="org-right">215</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬瑜珈垫</td><td class="org-right">88</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">懒猫五方塔</td><td class="org-right">566</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">救生毯</td><td class="org-right">82</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">钛地钉（长）\* 6</td><td class="org-right">90</td></tr></tbody><tbody><tr><td class="org-left">背包</td><td class="org-left">ULA EPIC</td><td class="org-right">1052</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">SEATOSUMMIT 60升大河防水袋</td><td class="org-right">316</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">强氧魔怪</td><td class="org-right">105</td></tr></tbody><tbody><tr><td class="org-left">电器</td><td class="org-left">米勒 ML102</td><td class="org-right">34</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">18650电池 \* 4</td><td class="org-right">188</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">NOKIA短USB线</td><td class="org-right">10</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">MOTO DEFY</td><td class="org-right">114</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">华为荣耀3C</td><td class="org-right">137</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">索尼Alpha5000</td><td class="org-right">414</td></tr></tbody><tbody><tr><td class="org-left">衣服</td><td class="org-left">cloudveil 防风抓绒</td><td class="org-right">341</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬羊毛T恤</td><td class="org-right">163</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬绒里长袖</td><td class="org-right">263</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬速干长裤</td><td class="org-right">320</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬紧身绒裤</td><td class="org-right">195</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">迪卡侬防风手套</td><td class="org-right">82</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">outdome羊毛袜子</td><td class="org-right">60</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">羊毛帽子</td><td class="org-right">78</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">smartwood 袜子</td><td class="org-right">68</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">始祖鸟冲锋衣</td><td class="org-right">340</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">stoic冲锋裤</td><td class="org-right">229</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">黑冰羽绒脚套</td><td class="org-right">155</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">天石羽绒裤</td><td class="org-right">258</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">HW羽绒服</td><td class="org-right">335</td></tr></tbody><tbody><tr><td class="org-left">鞋子</td><td class="org-left">510</td><td class="org-right">914</td></tr></tbody><tbody><tr><td class="org-left">杂项</td><td class="org-left">救生哨加打火棒</td><td class="org-right">33</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">手表加指南针</td><td class="org-right">46</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">带帽檐头巾</td><td class="org-right">59</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">MSR 毛巾</td><td class="org-right">41</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">折叠碗</td><td class="org-right">49</td></tr></tbody><tbody><tr><td class="org-left">防水袋</td><td class="org-left">花岗岩粗苯防水袋18升 \* 2</td><td class="org-right">48</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">酱铺粗苯收纳袋</td><td class="org-right">9</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">三峰网袋（大号）</td><td class="org-right">17</td></tr></tbody><tbody><tr><td class="org-left">&#xa0;</td><td class="org-left">&#xa0;</td><td class="org-right">9235</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 户外 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 户外 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 设计与实现 学习笔记</title>
      <link href="/2015/05/17/android%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2015/05/17/android%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#orgef119aa">Android 设计与实现 学习笔记</a><ol><li><a href="#org0b72cde">JNI</a><ol><li><a href="#org1bb742b">JNI方法全名规则</a></li><li><a href="#orgb31f5bb">JNI引用类型与JAVA引用类型的转化关系</a></li><li><a href="#org0b4e615">JNI方法签名规则</a></li><li><a href="#orgc09ab0c">JNI操作域与方法的函数</a></li><li><a href="#org7e81c90">JNI引用</a></li><li><a href="#orgb2b8934">JNI异常处理</a></li></ol></li><li><a href="#orgc344ef0">启动</a><ol><li><a href="#org9f72ffc">启动流程</a></li><li><a href="#org75472b5">内核引导阶段</a></li><li><a href="#org4345489">内核启动阶段</a></li><li><a href="#orgcee7684">init进程执行过程</a></li><li><a href="#org5541769">init.rc文件</a></li><li><a href="#org508a948">执行Action，Service与属性服务</a></li><li><a href="#orgc7d5e68">进入Java世界</a></li></ol></li><li><a href="#orgcdb405e">Binder</a></li><li><a href="#orgca9e6a3">消息通信篇</a></li><li><a href="#org24ccfa5">Package Manager</a><ol><li><a href="#orgc6c0fa6">结构</a></li><li><a href="#org0229d25">启动</a></li><li><a href="#orgd6f62b7">APK安装过程</a></li></ol></li><li><a href="#org094957a">Activity Manager</a><ol><li><a href="#org92e1626">机制与实现</a></li><li><a href="#orgd6f15d9">应用程序Activity的启动和调度</a></li><li><a href="#org0d6dbed">Activity Manager进程管理</a></li></ol></li></ol></li></ol><p><a id="orgef119aa"></a></p><h1 id="Android-设计与实现-学习笔记"><a href="#Android-设计与实现-学习笔记" class="headerlink" title="Android 设计与实现 学习笔记"></a>Android 设计与实现 学习笔记</h1><div class="HTML"><!&#x2013; more &#x2013;></div><p><a id="org0b72cde"></a></p><h2 id="JNI"><a href="#JNI" class="headerlink" title="JNI"></a>JNI</h2><p><a id="org1bb742b"></a></p><h3 id="JNI方法全名规则"><a href="#JNI方法全名规则" class="headerlink" title="JNI方法全名规则"></a>JNI方法全名规则</h3><p>java方法：public static native boolean isLoggable(String tag, int level)<br>JNI方法：static jboolean android<sub>util</sub><sub>Log</sub><sub>isLoggable</sub>(JNIEnv* env, jobject clazz, jstring tag, jint level)</p><p><a id="orgb31f5bb"></a></p><h3 id="JNI引用类型与JAVA引用类型的转化关系"><a href="#JNI引用类型与JAVA引用类型的转化关系" class="headerlink" title="JNI引用类型与JAVA引用类型的转化关系"></a>JNI引用类型与JAVA引用类型的转化关系</h3><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /></colgroup><thead><tr><th scope="col" class="org-left">Java类型</th><th scope="col" class="org-left">JNI类型</th></tr></thead><tbody><tr><td class="org-left">java.lang.Class</td><td class="org-left">jclass</td></tr><tr><td class="org-left">java.lang.String</td><td class="org-left">jstring</td></tr><tr><td class="org-left">java.lang.Throwable</td><td class="org-left">jthrowable</td></tr><tr><td class="org-left">object[]</td><td class="org-left">jobjectArray</td></tr><tr><td class="org-left">boolean[]</td><td class="org-left">jbooleanArray</td></tr><tr><td class="org-left">byte[]</td><td class="org-left">jbyteArray</td></tr><tr><td class="org-left">char[]</td><td class="org-left">jcharArray</td></tr><tr><td class="org-left">short[]</td><td class="org-left">jshortArray</td></tr><tr><td class="org-left">int[]</td><td class="org-left">jintArray</td></tr><tr><td class="org-left">long[]</td><td class="org-left">jlongArray</td></tr><tr><td class="org-left">float[]</td><td class="org-left">jfloatArray</td></tr><tr><td class="org-left">double[]</td><td class="org-left">jdoubleArray</td></tr></tbody></table><p><a id="org0b4e615"></a></p><h3 id="JNI方法签名规则"><a href="#JNI方法签名规则" class="headerlink" title="JNI方法签名规则"></a>JNI方法签名规则</h3><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /></colgroup><thead><tr><th scope="col" class="org-left">Java类型</th><th scope="col" class="org-left">类型签名</th></tr></thead><tbody><tr><td class="org-left">boolean</td><td class="org-left">Z</td></tr><tr><td class="org-left">byte</td><td class="org-left">B</td></tr><tr><td class="org-left">chat</td><td class="org-left">C</td></tr><tr><td class="org-left">long</td><td class="org-left">J</td></tr><tr><td class="org-left">float</td><td class="org-left">F</td></tr><tr><td class="org-left">double</td><td class="org-left">D</td></tr><tr><td class="org-left">short</td><td class="org-left">S</td></tr><tr><td class="org-left">int</td><td class="org-left">I</td></tr><tr><td class="org-left">类</td><td class="org-left">L全限定类名;</td></tr><tr><td class="org-left">数组</td><td class="org-left">[元素类型签名</td></tr></tbody></table><p><a id="orgc09ab0c"></a></p><h3 id="JNI操作域与方法的函数"><a href="#JNI操作域与方法的函数" class="headerlink" title="JNI操作域与方法的函数"></a>JNI操作域与方法的函数</h3><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /><col  class="org-left" /><col  class="org-left" /></colgroup><thead><tr><th scope="col" class="org-left">访问对象域</th><th scope="col" class="org-left">调用实例方法</th><th scope="col" class="org-left">访问静态域</th><th scope="col" class="org-left">调用静态方法</th></tr></thead><tbody><tr><td class="org-left">GetFieldID</td><td class="org-left">GetMethodID</td><td class="org-left">GetStaticFieldID</td><td class="org-left">GetStaticMethodID</td></tr><tr><td class="org-left">Get<Type>Field</td><td class="org-left">Call<Type>Method</td><td class="org-left">GetStatic<Type>Field</td><td class="org-left">CallStatic<Type>Method</td></tr><tr><td class="org-left">Set<Type>Field</td><td class="org-left">CallNonvirtual<Type>Method</td><td class="org-left">SetStatic<Type>Field</td><td class="org-left">&#xa0;</td></tr></tbody></table><p><a id="org7e81c90"></a></p><h3 id="JNI引用"><a href="#JNI引用" class="headerlink" title="JNI引用"></a>JNI引用</h3><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /><col  class="org-left" /><col  class="org-left" /></colgroup><thead><tr><th scope="col" class="org-left">引用类型</th><th scope="col" class="org-left">是否增加引用计数</th><th scope="col" class="org-left">作用范围</th><th scope="col" class="org-left">生命周期</th></tr></thead><tbody><tr><td class="org-left">局部引用</td><td class="org-left">可以增加引用计数</td><td class="org-left">本线程</td><td class="org-left">一次Native调用，只在创建它的Native方法的线程中有效，并且只在Native方法的一次调用中有效，在方法返回后，被回收</td></tr><tr><td class="org-left">全局引用</td><td class="org-left">可以增加引用计数</td><td class="org-left">多线程</td><td class="org-left">多个Native方法，生命周期到显式释放。通过引用JNI函数NewGlobalRef创建，通过DeleteGlobalRef释放</td></tr><tr><td class="org-left">弱全局引用</td><td class="org-left">不能增加引用计数</td><td class="org-left">多线程</td><td class="org-left">生命周期到显式释放。通过NewWeakGlobalRef创建，通过DeleteWeakGlobalRef释放，通过IsSameObject判断是否被回收</td></tr></tbody></table><p>if (env-&gt;isSameObject(weak<sub>ref</sub>, NULL) == JNI<sub>TRUE</sub>) 那么引用被释放</p><p><strong>全局引用，默认不能超过2000个。如果超过，在logcat中会看到”GREF overflow”</strong></p><p><a id="orgb2b8934"></a></p><h3 id="JNI异常处理"><a href="#JNI异常处理" class="headerlink" title="JNI异常处理"></a>JNI异常处理</h3><p>检查异常的方法有：</p><ul><li>检查上一次JNI函数调用的返回值是否为NULL</li><li>通过调用JNI函数ExceptionOccurred()来判断是否发生异常</li></ul><p>检查到异常后必须予以处理：</p><ul><li>立即返回，异常会在Java代码中抛出</li><li>调用ExceptionClear()来清除异常</li></ul><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /></colgroup><thead><tr><th scope="col" class="org-left">JNI异常处理函数</th><th scope="col" class="org-left">功能描述</th></tr></thead><tbody><tr><td class="org-left">Throw</td><td class="org-left">抛出现有异常</td></tr><tr><td class="org-left">ThrowNew</td><td class="org-left">抛出新的异常</td></tr><tr><td class="org-left">ExceptionOccurred</td><td class="org-left">判断是否发生异常，并获得异常的引用</td></tr><tr><td class="org-left">ExceptionCheck</td><td class="org-left">判断是否发生异常</td></tr><tr><td class="org-left">ExceptionDescribe</td><td class="org-left">异常堆栈信息</td></tr><tr><td class="org-left">ExceptionClear</td><td class="org-left">清除一个未处理的异常</td></tr><tr><td class="org-left">FatalError</td><td class="org-left">严重错误，退出</td></tr></tbody></table><p><a id="orgc344ef0"></a></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p><a id="org9f72ffc"></a></p><h3 id="启动流程"><a href="#启动流程" class="headerlink" title="启动流程"></a>启动流程</h3><ol><li>执行bootloader</li><li>调用start<sub>kernel进入内核启动阶段</sub>，最终启动用户空间的init程序</li><li>init解析init.rc配置文件，开启zygote与ServiceManager两个守护进程。zygote为Android启动的第一个Dalvik虚拟机，ServiceManager是Binder通信的基础。</li><li>zygote定义socket，用于接收ActivityManagerService启动应用程序的请求</li><li>zygote虚拟机启动system<sub>server子进程</sub>。</li><li>system<sub>server进程的init1与init2阶段分别启动Native</sub> System Service和Java System Service</li><li>在system<sub>server中开启Android核心服务</sub>，并添加入ServiceManager中。设置系统为systemReady状态。</li><li>ActivityManagerService与zygote中的Socket通信，通过zygote启动Home应用，进入系统桌面。</li><li>zygote收到ActivityManagerService连接请求，执行runSelectLoopMode</li><li>zygote处理请求通过forkAndSpecialize启动新的应用进程，并最终启动HOME</li></ol><p><a id="org75472b5"></a></p><h3 id="内核引导阶段"><a href="#内核引导阶段" class="headerlink" title="内核引导阶段"></a>内核引导阶段</h3><ul><li>kernel/arch/arm/kernel/head.S</li><li>kernel/arch/arm/kernel/head-common.S</li></ul><p><a id="org4345489"></a></p><h3 id="内核启动阶段"><a href="#内核启动阶段" class="headerlink" title="内核启动阶段"></a>内核启动阶段</h3><ol><li>kernel/init/main.c -&gt; start<sub>kernel函数</sub></li><li>rest<sub>init</sub> -&gt; kernel<sub>init与kthreadd进程</sub><br>kernel<sub>init</sub> -&gt; init<sub>post</sub> -&gt; /init 程序，或：/sbin/init, /etc/init, /bin/init, /bin/sh -&gt; run<sub>init</sub><sub>process</sub></li></ol><p><a id="orgcee7684"></a></p><h3 id="init进程执行过程"><a href="#init进程执行过程" class="headerlink" title="init进程执行过程"></a>init进程执行过程</h3><ul><li>创建 /proc, /sys, tmpfs, /dev/pts, /dev/socket, devpts, proc, sysfs 这些目录</li><li>解析init.rc初始化文件</li><li>触发build in的Action -&gt; queue<sub>builtin</sub><sub>action</sub>, 这些action并没有在init.rc或者init.<hardware>.rc中配置</li><li>重新启动异常退出的Service</li><li>监听来自属性服务property service</li><li>监控signal，接收子进程异常退出后抛出的SIGCHLD信号，回收子进程资源或者重启子进程</li><li>监听来自keychord设备的事件</li></ul><p><a id="org5541769"></a></p><h3 id="init-rc文件"><a href="#init-rc文件" class="headerlink" title="init.rc文件"></a>init.rc文件</h3><ul><li>基本概念：Section, Action, Service, Trigger, Command, Option</li><li>基本关键字：on, service</li><li>on -&gt; Action</li><li>service -&gt; Service，Option指定何时，如何启动Service程序。Service由服务名，服务对应命令路径，命令参数组成</li><li>Command -&gt; Linux命令或者方法</li><li>Trigger -&gt; 自定义的触发条件</li><li>Action -&gt; on声明，Trigger触发的Command序列</li></ul><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /></colgroup><thead><tr><th scope="col" class="org-left">Trigger关键字</th><th scope="col" class="org-left">描述</th></tr></thead><tbody><tr><td class="org-left">boot</td><td class="org-left">/init.conf被加载后的第一个trigger</td></tr><tr><td class="org-left">property:<property name>=<property value></td><td class="org-left">属性值改变为指定值时</td></tr><tr><td class="org-left">device-added-<path></td><td class="org-left">添加设备时触发</td></tr><tr><td class="org-left">device-removed-<path></td><td class="org-left">移除设备时触发</td></tr><tr><td class="org-left">service-exited-<name></td><td class="org-left">指定服务存在时</td></tr></tbody></table><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /></colgroup><thead><tr><th scope="col" class="org-left">Command关键字</th><th scope="col" class="org-left">描述</th></tr></thead><tbody><tr><td class="org-left">exec <path> [<argument>\*]</td><td class="org-left">执行路径为<path>的程序，参数列表为<argument>\*</td></tr><tr><td class="org-left">export <name> <value></td><td class="org-left">设置系统全局环境变量</td></tr><tr><td class="org-left">ifup <interface></td><td class="org-left">使用ifup启动名为<interface>的网络接口</td></tr><tr><td class="org-left">import <filename></td><td class="org-left">解析导入的init配置文件，扩展当前的配置</td></tr><tr><td class="org-left">hostname <name></td><td class="org-left">设置主机名</td></tr><tr><td class="org-left">chdir <directory></td><td class="org-left">切换工作目录</td></tr><tr><td class="org-left">chmod <octal-mode> <path></td><td class="org-left">修改文件访问权限</td></tr><tr><td class="org-left">chown <owner> <group> <path></td><td class="org-left">修改文件所有者和组</td></tr><tr><td class="org-left">chroot <directory></td><td class="org-left">改变程序执行所参考的根目录</td></tr><tr><td class="org-left">class<sub>start</sub> <serviceclass></td><td class="org-left">启动指定类别的所有服务</td></tr><tr><td class="org-left">class<sub>stop</sub> <serviceclass></td><td class="org-left">停止指定类别的所有服务</td></tr><tr><td class="org-left">domainname <name></td><td class="org-left">设置域名</td></tr><tr><td class="org-left">insmod <path></td><td class="org-left">加载路径为<path>的内核模块</td></tr><tr><td class="org-left">mkdir <path> [mode] [owner] [group]</td><td class="org-left">创建路径为<path>的目录</td></tr><tr><td class="org-left">mount <type> <device> <dir> [<mountoption>\*]</td><td class="org-left">挂载设备</td></tr><tr><td class="org-left">setkey</td><td class="org-left">暂时不可用</td></tr><tr><td class="org-left">setprop <name> <value></td><td class="org-left">设置系统属性</td></tr><tr><td class="org-left">setrlimit <resource> <cur> <max></td><td class="org-left">设置资源限制，resource是当前要限制的资源，cur是软限制，max是硬限制</td></tr><tr><td class="org-left">start <service></td><td class="org-left">启动指定服务</td></tr><tr><td class="org-left">stop <service></td><td class="org-left">停止指定服务</td></tr><tr><td class="org-left">symlink <target> <path></td><td class="org-left">创建指向<path>的软连接<target></td></tr><tr><td class="org-left">sysclktz <mins<sub>west</sub><sub>of</sub><sub>gmt</sub>></td><td class="org-left">设置系统时钟基准</td></tr><tr><td class="org-left">trigger <event></td><td class="org-left">触发一个事件</td></tr><tr><td class="org-left">write <path> <string> [<string>\*]</td><td class="org-left">打开路径为<path>的一个文件，并写入一个或多个字符串</td></tr></tbody></table><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /></colgroup><thead><tr><th scope="col" class="org-left">Option关键字</th><th scope="col" class="org-left">描述</th></tr></thead><tbody><tr><td class="org-left">critial</td><td class="org-left">核心服务，在一定时间内退出多次，将导致系统重启到recovery mode</td></tr><tr><td class="org-left">disabled</td><td class="org-left">开机时禁用此服务，即开机时不会自动启动此服务，但是可以手动启动</td></tr><tr><td class="org-left">setenv <name> <value></td><td class="org-left">为服务设置环境变量</td></tr></tbody><tbody><tr><td class="org-left">socket <name> <type> <perm> [<user> [<group>]]</td><td class="org-left">创建一个名为/dev/socket/<name>的socket，然后把它的文件描述符传给启动程序。</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">类型type的值为dgram或stream。perm表示该socket的访问权限；</td></tr><tr><td class="org-left">&#xa0;</td><td class="org-left">user和group表示该socket所属的用户各组，这两个参数默认为0</td></tr></tbody><tbody><tr><td class="org-left">user <username></td><td class="org-left">执行服务前切换到用户<username>，此选项默认是root</td></tr><tr><td class="org-left">group <groupname> [<groupname>\*]</td><td class="org-left">执行服务前切换到组<groupname>, 默认是root</td></tr><tr><td class="org-left">oneshot</td><td class="org-left">服务只启动一次，一旦关闭就不能再启动</td></tr><tr><td class="org-left">class <name></td><td class="org-left">为服务指定一个类别，默认为default, 同一类别的服务必须一起启动和停止</td></tr><tr><td class="org-left">onrestart <Command></td><td class="org-left">当服务重启时，执行一个Command</td></tr></tbody></table><p><a id="org508a948"></a></p><h3 id="执行Action，Service与属性服务"><a href="#执行Action，Service与属性服务" class="headerlink" title="执行Action，Service与属性服务"></a>执行Action，Service与属性服务</h3><ul><li><p>init.c中的execute<sub>one</sub><sub>command</sub>, service<sub>start</sub></p></li><li><p>init.c -&gt; main -&gt; action<sub>for</sub><sub>each</sub><sub>trigger</sub> -&gt; builtins.c中的do<sub>class</sub><sub>start</sub> -&gt; service<sub>start</sub><sub>if</sub><sub>not</sub><sub>disabled</sub></p></li><li><p>init.c -&gt; main -&gt; property<sub>init</sub>() 属性服务内存共享区分配 -&gt; property<sub>load</sub><sub>boot</sub><sub>defaults加载</sub>/default.prop文件中的属性 -&gt; property<sub>service</sub><sub>init</sub> -&gt; queue<sub>property</sub><sub>triggers</sub></p><ol><li>property<sub>service</sub><sub>init</sub><sub>action</sub> -&gt; start<sub>property</sub><sub>service</sub> 加载属性文件，创建Socket接收客户端请求</li><li>queue<sub>property</sub><sub>triggers</sub><sub>action</sub> 触发所有以property: 开头的Action</li><li>通过SOCKET实现属性，通讯接口为property<sub>set</sub>, property<sub>get</sub></li></ol></li></ul><p><a id="orgc7d5e68"></a></p><h3 id="进入Java世界"><a href="#进入Java世界" class="headerlink" title="进入Java世界"></a>进入Java世界</h3><ol><li><p>启动zygote虚拟机，通过属性系统获取虚拟机配置信息，调用JNI<sub>CreateJavaVM方法创建虚拟机</sub></p></li><li><p>注册JNI方法，register<sub>jni</sub><sub>procs</sub></p></li><li><p>AndroidRuntime：start -&gt; CallStaticVoidMethod -&gt; ZygoteInit的main 进入Java环境</p><ol><li>注册zygote的Socket, ZygoteInit -&gt; registerZygoteSocket</li><li>预加载Class资源和Resource资源, preload -&gt; preLoadClass, preLoadResources<ol><li>preLoadClass 加载 preloaded-classes 文件中指定的类</li><li>preLoadResources 加载 drawable与color资源，定义在framework/base/core/res/res/values/arrays.xml</li></ol></li><li>ZygoteInit -&gt; startSystemServer 启动system<sub>serve进程</sub><ol><li>通过forkSystemServer -&gt; system<sub>server子进程</sub></li><li>system<sub>server子进程</sub> -&gt; handleSystemServerProcess -&gt; RuntimeInit.zygoteInit<ol><li>redirectLogStream</li><li>commonInit 设置时区，Log配置，HTTP User-Agent，模拟器上的trace调试</li><li>nativeZygoteInit 开启Binder通信</li><li>invodeStaticMain -&gt; com.android.server.SystemServer.main -&gt; throw new ZygoteInit.MethodAndArgsCaller</li></ol></li></ol></li><li>ZygoteInit.main -&gt; catch(ZygoteInit.MethodAndArgsCaller) -&gt; 执行MethodAndArgsCaller的run方法<ol><li>init1 -&gt; 启动Native System Service<ul><li>SurfaceFlinger, SensorService</li><li>AndroidRuntime -&gt; SystemServer.init2</li><li>初始化Binder通信</li></ul></li><li>init2 -&gt; Java System Service<ul><li>Looper.prepare()</li><li>EntropyService, PowerManagerService, ActivityManagerService, TelephonyRegistry, PackageManagerService, WindowManagerService</li><li>startSystemUi</li><li>Watchdog</li></ul></li></ol></li><li>执行runSelectLoopMode方法，通过Socket监听客户端请求。用runOnce处理请求</li></ol></li><li><p>处理Home启动请求</p><p>ActivityManagerService.systemReady -&gt; ActivityStack.resumeTopActivityLocked -&gt; ActivityManagerService.startHomeActivityLocked -&gt; ActivityStack.startActivityLocked -&gt; ActivityStack.startActivityUncheckedLocked -&gt; other startActivityLocked -&gt; other resumeTopActivityLocked -&gt; startSpecificActivityLocked -&gt; startProcessLocked -&gt; Process.start(“android.app.ActivityThread”) -&gt; startViaZygote -&gt; zygoteSendArgsAndGetResult -&gt; Socket -&gt; zygote -&gt; runOnce -&gt; handleChildProc -&gt; android.app.ActivityThread.main</p></li></ol><p><a id="orgcdb405e"></a></p><h2 id="Binder"><a href="#Binder" class="headerlink" title="Binder"></a>Binder</h2><ol><li><p>初始化Binder通信</p></li><li><p>将自身注册为Context管理者</p></li><li><p>循环处理IPC请求</p></li><li><p>Server启动</p><ol><li>创建ProcessState对象</li><li>获取servicemanager代理对象<ul><li>Binder通信接口: IBinder, BBinder（Server对应的Binder对象）, BpBinder（Client访问BBinder的代理对象）</li><li>Binder服务接口：Server端提供的服务，由IServiceManager提供</li><li>Proxy：BpInterface继承自BpRefBase，BpRefBase.mRemote指向Client的BpBinder对象。BpServiceManager实现服务接口中声明的方法</li><li>Stub：BnInterface，BnServerManager</li></ul></li><li>注册Service</li><li>Server进程开启线程池</li></ol></li><li><p>Binder在Native中的实现</p></li><li><p>Binder在Java层中的实现</p></li><li><p>Java系统服务注册过程</p><p>BinderInternal.getContextObject -&gt; IBinder -&gt; ServiceManagerNative.asInteface -&gt; sServiceManager -&gt; addService</p><ol><li>BinderInternal.getContextObject</li><li>ServiceManagerNative.asInterface</li><li>ServiceManagerProxy.addService<ol><li>Java的Service对象写入Parcel中</li><li>使用transact方法进行ipc通信</li></ol></li></ol></li><li><p>Client获取服务代理</p><ol><li>获取服务的Proxy</li><li>Proxy.Stub.asInterface</li><li>new SomeServer(SomeServerInterface, Thread)</li></ol></li><li><p>Client调用Java系统服务的方法</p></li><li><p>AIDL</p></li></ol><p><a id="orgca9e6a3"></a></p><h2 id="消息通信篇"><a href="#消息通信篇" class="headerlink" title="消息通信篇"></a>消息通信篇</h2><ol><li>Handler.post(Runnable r) -&gt; Handler.sendMessageDelayed(getPostMessage(r), 0) -&gt; Message m.callback = r</li><li>Handler.dispatchMessage -&gt; msg.callback != null -&gt; callback<br>-&gt; msg.handleMessage != null -&gt; callback.handleMessage<br>-&gt; handleMessage</li><li>MessageQueue.IdleHandler</li><li>Message.recycle</li><li>AsyncTask.execute -&gt; executeOnExecutor(SerialExecutor, params) -&gt; SerialExecutor.execute(mFuture)<ul><li>会通过一个ThreadPoolExecutor来执行线程</li></ul></li></ol><p><a id="org24ccfa5"></a></p><h2 id="Package-Manager"><a href="#Package-Manager" class="headerlink" title="Package Manager"></a>Package Manager</h2><ul><li>Permission, Permission Group信息的增加，删除，查询和检查</li><li>扫描并安装和卸载APK包，查询包的UID，GID，包名，系统默认程序</li><li>比较两个包的签名</li><li>查询Activity，Provider、Receiver、Service信息</li><li>查询Application、Package、Resouce、Shared、Library、Feature信息</li><li>Intent匹配</li></ul><p><a id="orgc6c0fa6"></a></p><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><ul><li><p>adb push -&gt; adb install -r -l -s -&gt; adb uninstall</p></li><li><p>Google Market、PackageInstaller.apk、第三方安装界面</p></li><li><p>PackageManager及其子类、adb与pm命令 -&gt; binder通信 -&gt; PackageManagerService方法</p></li><li><p>PackageManagerService及其相关类 Setting、Installer、FileObserver、DefaultContainerService</p></li></ul><p><a id="org0229d25"></a></p><h3 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h3><ol><li>SystemServer.Init2() -&gt; ServerThread.run() -&gt; PackageManagerService.main()</li><li>PackageManagerService pms = new PackageManagerService(context, factoryTest, onlyCore)</li><li>创建并初始化Setting对象</li><li>获取系统默认设置</li><li>启动PackageHandler</li><li>创建data目录并初始化UserManager</li><li>解析data/system目录下的package.xml、packages-backup.xml</li><li>dexopt优化</li><li>启动FileObserver监控APK文件的目录</li><li>调用scanDirLI扫描并安装APK</li><li>writeLPr更新package.xml, packages-backup.xml</li></ol><p>uid &gt;= FIRST<sub>APPLICATION</sub><sub>UID</sub> 或者 uid &lt; FIRST<sub>APPLICATION</sub><sub>UID</sub>，FIST<sub>APPLICATION</sub><sub>UID</sub> &lt; 10000为系统程序UID。</p><ol><li><permission><ul><li><group>用于为指定的组ID分配权限</li><li>&lt;assign<sub>permission</sub>&gt;用于为指定的用户ID分配指定的权限</li><li><library>指定的系统扩展库</li></ul></li><li><feature><ul><li>Hardware feature 指定当前设备支持的硬件特性：Audio、Bluetooth、Camera、Location、Microphone、NFC、Sensors、Screen、Telephony、Touchscreen、USB、WIFI。</li><li>Software feature SIP VOIP</li></ul><p>PackageManager的hasSystemFeature, getSystemAvailableFeatures</p></li><li><p>FileObserver监控</p><ul><li>system/framework</li><li>system/app</li><li>vendor/app</li><li>data/app</li><li>data/app-private</li></ul></li><li><p>scanDirLI</p><ul><li>system/framework/</li><li>system/app/</li><li>vendor/app/</li><li>data/app</li><li>data/app-private</li></ul></li></ol><p><a id="orgd6f62b7"></a></p><h3 id="APK安装过程"><a href="#APK安装过程" class="headerlink" title="APK安装过程"></a>APK安装过程</h3><ul><li>读取目录</li><li>解析AndroidManifest.xml</li></ul><p><a id="org094957a"></a></p><h2 id="Activity-Manager"><a href="#Activity-Manager" class="headerlink" title="Activity Manager"></a>Activity Manager</h2><p><a id="org92e1626"></a></p><h3 id="机制与实现"><a href="#机制与实现" class="headerlink" title="机制与实现"></a>机制与实现</h3><ul><li>启动、杀死应用程序</li><li>启动并调度Activity生命周期</li><li>启动并调度应用程序Service生命周期</li><li>注册Broadcast Receiver，并接收和分发Broadcast</li><li>启动并发布Content Provider</li><li>调度Task</li><li>检查、授予、收回访问URI权限</li><li>处理crash</li><li>调整进程调度优先级及策略</li><li>查询当前系统运行状态</li></ul><p>ActivityThread：管理应用程序所在进程的主线程的执行调度和运行Activities，broadcast</p><p>Instrumentation：应用程序测量工具基类，用于监控系统与应用程序间的交互</p><p>ContextImpl：context的通用实现类</p><p>Context2： 可以获取应用程序运行环境中的一些全局信息的接口</p><p>Application：一个可以维护全局的应用程序状态的基类</p><ol><li>初始化一个单例的Context对象，使其与Resource、LoadApk、ActivityThread、ApplicationContentResolver关联</li><li>创建Application对象，并与Context关联</li><li>创建ActivityStack类，管理Activity栈并维护其状态</li><li>startRunning</li><li>ActivityManagerService.setSystemProcess</li><li>installSystemProviders</li><li>查询、安装Content Provider -&gt; publishContentProvider</li><li>systemReady<ol><li>发送ACTION<sub>PRE</sub><sub>BOOT</sub><sub>COMPLETED广播</sub>：CalendarProvider、ContactsProvider、MediaProvider</li><li>清理预启动的非persistent进程</li><li>读取Settings配置： always<sub>finish</sub><sub>activities</sub></li><li>Runnable回调接口：SystemUIService、BatteryService、NetworkManagementService、Watchdog</li><li>启动persistent应用和Home</li><li>发送ACTION<sub>BOOT</sub><sub>COMPLETED广播</sub></li></ol></li></ol><p><a id="orgd6f15d9"></a></p><h3 id="应用程序Activity的启动和调度"><a href="#应用程序Activity的启动和调度" class="headerlink" title="应用程序Activity的启动和调度"></a>应用程序Activity的启动和调度</h3><p>Launcher.onClick -&gt; Launcher.startActivitySafely -&gt; Launcher.startActivity -&gt; Launch.parent.startActivity -&gt; Activity.startActivityForResult(requestCode = -1) -&gt; Instrumentation.execStartActivity -&gt; ActivityManagerProxy.startActivity -&gt; BinderProxy.transact(START<sub>ACTIVITY</sub><sub>TRANSACTION</sub>)</p><p>ActivityManagerService.startActivityMayWait -&gt; ActivityStack.startActivityLock -&gt; ActivityStack.startActivityUncheckedLocked -&gt; ActivityStack.startActivityLocked -&gt; ActivityStack.resumeTopActivity</p><p>ActivityManagerService.startActivityMayWait</p><p>int index = indexOfTokenLocked -&gt; resultCode = mHistory.get(index) -&gt; sendActivityResultLocked</p><p>FLAG<sub>ACTIVITY</sub><sub>NEW</sub><sub>TASK</sub>：</p><ul><li>sourceRecord == null (由Launch或者adb start)</li><li>sourceRecord 启动模式为singleInstance</li><li>要启动的目标为singleInstance或者singleTask</li></ul><p>用户行为导致Activity切换 -&gt; 回调Activity.onUserLeaveHint</p><p>可利用Task：</p><ul><li>目标非singleInstance：<ol><li>ActivityRecord.affinity == Activity.affinity</li><li>ActivityRecord.Task.Intent.Component == Activity.Component</li><li>ActivityRecord.Task.affinityIntent.Component == Activity.Component</li></ol></li><li>目标为singleInstance，ActivityRecord.Task.Intent.Component == Activity.Component</li></ul><p>启动Activity的第二个阶段为Pause</p><ol><li>ActivityStack.startPausingLocked</li><li>schedulePauseActivity</li><li>handlePauseActivity</li><li>performPauseActivity</li><li>activityPaused</li><li>completedPauseLocked</li></ol><p>启动应用程序进程</p><ul><li>会根据新的Activity是否占满屏来决定前一个Activity是否可见</li><li>如果systemReady 没有设为true，则先启动的应用程序都加入mProcessesOnHold列表中等待</li></ul><p>加载应用程序Activity</p><ul><li>ActivityThread.main创建出程序主线程</li><li>ActivityThread.attch将应用程序加入到ActivityManagerService中</li><li>ActivityManagerService.attachApplication</li><li>ApplicationThread.bindApplication</li><li>ActivityThread.handleBindApplication<ol><li>设置进程名</li><li>低内存设备禁用硬件加速</li><li>创建应用程序对应的Application</li><li>安装ContentProvider</li><li>Instrumentation的onCreate方法</li><li>Application的onCreate方法</li></ol></li></ul><p>显示Activity</p><ol><li><p>ActivityStack.realStartActivityLocked：加载Activity，onCreate，onStart，onResume。会通过WindowManagerService冻结屏幕并设置Activity可见。</p></li><li><p>handleLaunchActivity -&gt; performLaunchActivity -&gt; newActivity -&gt; makeApplication -&gt; init -&gt; attach -&gt; callActivityOnCreate -&gt; performCreate -&gt; onCreate -&gt; performStart -&gt; callActivityOnStart -&gt; onStart -&gt; callActivityOnPostCreate -&gt; onPostCreate</p></li><li><p>handleResumeActivity -&gt; performResumeActivity -&gt; onResume 控制可见性，如果在onResume时，又启动另一个Activity则窗口变不可见，黑屏可能由此来。onResume之前可能会有onNewIntent与onActivityResult调用</p></li><li><p>如果当前Activity处于stop状态，onRestart -&gt; onStart -&gt; onResume -》onPostResme</p></li><li><p>Activity.finish只是标志一下Activity处于完成的状态，会在IdleHandle线程中销毁</p></li></ol><p>停止源Activity，在目标Activity的onCreate、onStart、onResume、activityIdleInternal执行后，开始停止源Activity。</p><ol><li>FLAG<sub>ACTIVITY</sub><sub>NO</sub><sub>HISTORY启动标记的Activity是不会被放入栈中的</sub>。</li><li>onSaveInstanceState -》 onStop</li><li>StopInfo通知ActivityManagerService停止Activity的操作完成</li></ol><p><a id="org0d6dbed"></a></p><h3 id="Activity-Manager进程管理"><a href="#Activity-Manager进程管理" class="headerlink" title="Activity Manager进程管理"></a>Activity Manager进程管理</h3><p>非隐藏进程：</p><ul><li>有可见但非前台的activity</li><li>有可见activity，该进程未被完全覆盖的Activity</li><li>处于Pausing和Paused状态的activity</li><li>处于STOPPING状态的Activity</li><li>AMS.setProcessForeground</li><li>HOME进程</li><li>运行在内核空间中的进程</li><li>当前线程的上一个线程</li><li>备份线程</li></ul><p>/sys/module/lowmemorykiller/paramerters/adj 优先级数<br>/sys/module/lowmemorykiller/paramerters/minfree 对应的内存阀值</p><p>lowmem<sub>shrink</sub>:</p><ul><li>OOM adj越大的进程越容易被杀</li><li>相同OOM adj的进程，占用内存越大的越容易被杀</li><li>未达到最小内存阈值的最大值时，不会杀</li></ul>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
